[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=tripsage
    --cov=tripsage_core
    --cov-report=term-missing
    --cov-report=html:coverage/html
    --cov-report=xml:coverage/coverage.xml
    --cov-branch
    --no-cov-on-fail
    --timeout=60
    -ra

# Async test configuration
asyncio_mode = strict
asyncio_default_fixture_loop_scope = function

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Service and API integration tests
    e2e: End-to-end API flows
    performance: Performance and load smoke tests
    security: Security-critical validation tests
    docker: Docker configuration tests
    perf: Performance guard tests
    timeout: Tests asserting execution time thresholds
    slow: Tests exceeding default runtime expectations

# Test execution configuration
minversion = 6.0
# timeout = 300  # Requires pytest-timeout plugin
# timeout_method = thread  # Requires pytest-timeout plugin

# Warnings configuration
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*httpx.*:DeprecationWarning
    ignore:.*pydantic.*:DeprecationWarning

# Environment variables for testing are set by CI/test runner
# No env section needed as variables are configured externally
