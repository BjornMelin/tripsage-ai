name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - development
          - staging
          - production

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Create deployment
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        id: deployment
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: '${{ inputs.environment }}',
              required_contexts: [],
              auto_merge: false
            });
            
            core.setOutput('deployment_id', deployment.data.id);
            return deployment.data.id;

      - name: Deploy Backend
        run: |
          echo "Deploying backend to ${{ inputs.environment }}..."
          # Add your backend deployment commands here

      - name: Deploy Frontend
        run: |
          echo "Deploying frontend to ${{ inputs.environment }}..."
          # Add your frontend deployment commands here

      - name: Update deployment status
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        if: always()
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.deployment_id }},
              state: '${{ job.status }}',
              environment_url: 'https://${{ inputs.environment }}.tripsage.ai',
              description: 'Deployment ${{ job.status }}'
            });