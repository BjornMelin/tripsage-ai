{
  "openapi": "3.1.0",
  "info": {
    "title": "TripSage Unified API",
    "description": "\n# TripSage Unified Travel Planning API\n\nA FastAPI implementation that serves both frontend applications\nand AI agents for travel planning.\n\n## Dual Consumer Architecture\n\nThis API is designed to serve multiple consumer types with adapted responses:\n\n### Frontend Consumers (Next.js Web Application)\n- **User-friendly error messages** - Simplified, actionable descriptions\n- **UI metadata** - Display hints, pagination, and user context\n- **Standard rate limits** - Optimized for human interaction patterns\n- **Sanitized data** - Secure, filtered responses for web display\n\n### AI Agent Consumers (LangGraph-based Agents)\n- **Rich context data** - Technical details for decision making\n- **Tool integration metadata** - Information for agent tool calling\n- **Higher rate limits** - Higher throughput for automated workflows\n- **Raw data access** - Unfiltered data for AI processing\n\n## Core Capabilities\n\n### Travel Planning & Management\n* **Trip Planning** - Travel itinerary creation and optimization\n* **Flight Search & Booking** - Multi-provider flight search with price tracking\n* **Accommodation Search** - Hotel and alternative lodging with MCP integration\n* **Destination Research** - AI-powered insights and recommendations\n* **Itinerary Building** - Intelligent scheduling and route optimization\n\n### AI & Communication\n* **Chat System** - Conversation management with AI agents\n* **Memory & Context** - Persistent conversation memory and user learning\n* **Real-time Communication** - WebSocket support for live updates\n* **File Processing** - Document analysis and travel document extraction\n\n### Authentication & Security\n* **Dual Authentication** - JWT tokens for users, API keys for agents\n* **BYOK (Bring Your Own Key)** - Secure user-provided API key management\n* **Rate Limiting** - Consumer-aware limits with enhanced principal tracking\n* **Data Protection** - AES-256 encryption for sensitive data\n\n## Authentication Methods\n\n### JWT Authentication (Primary for Frontend)\nObtain a token via `/api/v1/auth/token`, then include in the Authorization header:\n\n```\nPOST /api/v1/auth/token\n{\n  \"username\": \"user@example.com\",\n  \"password\": \"secure_password\"\n}\n\nAuthorization: Bearer <jwt_token>\n```\n\n### API Key Authentication (Primary for Agents)\nCreate an API key via `/api/v1/keys`, then use in the X-API-Key header:\n\n```\nPOST /api/v1/keys (with JWT auth)\n{\n  \"description\": \"Agent access key\"\n}\n\nX-API-Key: <api_key>\n```\n\n### BYOK (Bring Your Own Key) System\nStore encrypted user API keys for external services:\n\n```\nPOST /api/v1/keys\n{\n  \"service\": \"duffel\",\n  \"api_key\": \"user_provided_key\",\n  \"description\": \"My Duffel API key\"\n}\n```\n\n## Consumer-Specific Response Formats\n\n### Frontend Response Example\n```json\n{\n  \"data\": [...],\n  \"meta\": {\n    \"ui_hints\": {\n      \"show_loading\": false,\n      \"suggested_actions\": [\"book_now\", \"save_for_later\"]\n    },\n    \"pagination\": {\n      \"page\": 1,\n      \"total_pages\": 5,\n      \"has_next\": true\n    }\n  }\n}\n```\n\n### Agent Response Example\n```json\n{\n  \"data\": [...],\n  \"agent_context\": {\n    \"tool_suggestions\": [\"search_alternatives\", \"check_price_history\"],\n    \"reasoning_context\": \"User prefers budget options\",\n    \"confidence_score\": 0.95\n  }\n}\n```\n\n## Performance Features\n\n* **Multi-tier Caching** - DragonflyDB with intelligent TTL (25x improvement)\n* **Consumer-aware Rate Limiting** - Higher limits for agents vs. frontend\n* **Connection Pooling** - Optimized database and external API connections\n* **Query Optimization** - Indexed searches and prepared statements\n\n## Rate Limiting\n\nConsumer-aware rate limiting with different limits:\n\n* **Frontend Users**: 100 requests/minute, 1000 requests/hour\n* **AI Agents**: 500 requests/minute, 5000 requests/hour\n* **Authenticated Users**: 5x multiplier on base limits\n* **BYOK Users**: Higher limits when using own API keys\n\n## Error Handling\n\nThe API returns consumer-specific error formats:\n\n### Frontend Error Format\n```json\n{\n  \"error\": {\n    \"type\": \"validation_error\",\n    \"message\": \"Please check your travel dates\",\n    \"field\": \"departure_date\",\n    \"suggestion\": \"Departure date must be in the future\"\n  }\n}\n```\n\n### Agent Error Format\n```json\n{\n  \"error\": {\n    \"type\": \"external_api_error\",\n    \"service\": \"duffel\",\n    \"status_code\": 429,\n    \"retry_after\": 60,\n    \"fallback_available\": true,\n    \"technical_details\": \"Rate limit exceeded for flight search endpoint\"\n  }\n}\n```\n\n## Real-time Features\n\nWebSocket endpoints for live communication:\n\n* `WS /api/v1/ws/chat/{session_id}` - Real-time chat with agents\n* `WS /api/v1/ws/trip/{trip_id}` - Trip planning collaboration\n* `WS /api/v1/ws/status` - Agent status and progress updates\n\n## Integration with TripSage Core\n\nThis API leverages the `tripsage_core` shared library for:\n\n* **Business Services** - Flight, accommodation, memory, and chat services\n* **Infrastructure Services** - Database, caching, and WebSocket management\n* **External API Integration** - Standardized patterns for third-party services\n* **Security & Configuration** - Centralized settings and encryption\n",
    "termsOfService": "https://tripsage.example.com/terms/",
    "contact": {
      "name": "TripSage API Team",
      "url": "https://github.com/BjornMelin/tripsage-ai",
      "email": "api@tripsage.example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/api/health": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "Comprehensive Health Check",
        "description": "Comprehensive health check endpoint with all components.\n\nReturns detailed health status of the application and all its dependencies.",
        "operationId": "comprehensive_health_check_api_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemHealth"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/liveness": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "Liveness Check",
        "description": "Basic liveness check for container orchestration.\n\nReturns 200 if the application is alive and can respond to requests.\nThis endpoint should be lightweight and not check external dependencies.",
        "operationId": "liveness_check_api_health_liveness_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/health/readiness": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "Readiness Check",
        "description": "Readiness check for container orchestration.\n\nReturns whether the application is ready to serve traffic.\nChecks critical dependencies but with shorter timeouts.",
        "operationId": "readiness_check_api_health_readiness_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadinessCheck"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/database": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "Database Health Check",
        "description": "Detailed database health check.\n\nReturns database health information including:\n- Connection status\n- Query performance\n- Connection pool stats",
        "operationId": "database_health_check_api_health_database_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/health/cache": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "Cache Health Check",
        "description": "Detailed cache (DragonflyDB) health check.\n\nReturns cache health information including:\n- Connection status\n- Memory usage\n- Key statistics",
        "operationId": "cache_health_check_api_health_cache_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/health/ratelimit": {
      "get": {
        "tags": [
          "health",
          "health"
        ],
        "summary": "Ratelimit Status",
        "description": "Show current rate-limiting backend information (operators).",
        "operationId": "ratelimit_status_api_health_ratelimit_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Ratelimit Status Api Health Ratelimit Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/overview": {
      "get": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Get System Overview",
        "description": "Get system overview for dashboard.\n\nReturns high-level system metrics and status including:\n- Overall system health\n- Request and error counts\n- Active users and API keys\n- Success rates",
        "operationId": "get_system_overview_api_dashboard_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemOverviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/services": {
      "get": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Get Services Status",
        "description": "Get status of all external services.\n\nReturns health status for all integrated external services:\n- OpenAI\n- Weather API\n- Google Maps\n- Other configured services",
        "operationId": "get_services_status_api_dashboard_services_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ServiceStatusResponse"
                  },
                  "type": "array",
                  "title": "Response Get Services Status Api Dashboard Services Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/metrics": {
      "get": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Get Usage Metrics",
        "description": "Get usage metrics for specified time range.\n\nReturns usage metrics including:\n- Request and error counts\n- Latency statistics\n- Top endpoints\n- Error breakdown by type",
        "operationId": "get_usage_metrics_api_dashboard_metrics_get",
        "parameters": [
          {
            "name": "time_range_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "default": 24,
              "title": "Time Range Hours"
            }
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageMetricsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/rate-limits": {
      "get": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Get Rate Limits Status",
        "description": "Get rate limit status for API keys.\n\nReturns current rate limit status for active API keys including:\n- Current usage vs limits\n- Remaining quota\n- Reset times",
        "operationId": "get_rate_limits_status_api_dashboard_rate_limits_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RateLimitInfoResponse"
                  },
                  "title": "Response Get Rate Limits Status Api Dashboard Rate Limits Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/alerts": {
      "get": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Get Alerts",
        "description": "Get system alerts and notifications.\n\nReturns alerts filtered by severity and acknowledgment status:\n- Security alerts\n- Performance alerts\n- Error rate alerts\n- Anomaly detection alerts",
        "operationId": "get_alerts_api_dashboard_alerts_get",
        "parameters": [
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Severity"
            }
          },
          {
            "name": "acknowledged",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Acknowledged"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertInfoResponse"
                  },
                  "title": "Response Get Alerts Api Dashboard Alerts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/alerts/{alert_id}/acknowledge": {
      "post": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Acknowledge Alert",
        "description": "Acknowledge an alert.\n\nMarks an alert as acknowledged by the current user.",
        "operationId": "acknowledge_alert_api_dashboard_alerts__alert_id__acknowledge_post",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Acknowledge Alert Api Dashboard Alerts  Alert Id  Acknowledge Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/alerts/{alert_id}": {
      "delete": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Dismiss Alert",
        "description": "Dismiss an alert.\n\nRemoves an alert from the active alerts list.",
        "operationId": "dismiss_alert_api_dashboard_alerts__alert_id__delete",
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alert Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Dismiss Alert Api Dashboard Alerts  Alert Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/users/activity": {
      "get": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Get User Activity",
        "description": "Get user activity data.\n\nReturns user activity metrics including:\n- Request counts and success rates\n- Services used\n- Last activity times",
        "operationId": "get_user_activity_api_dashboard_users_activity_get",
        "parameters": [
          {
            "name": "time_range_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "default": 24,
              "title": "Time Range Hours"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserActivityResponse"
                  },
                  "title": "Response Get User Activity Api Dashboard Users Activity Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/trends/{metric_type}": {
      "get": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Get Trend Data",
        "description": "Get trend data for specified metric.\n\nReturns time series data for metrics like:\n- request_count\n- error_rate\n- latency\n- active_users",
        "operationId": "get_trend_data_api_dashboard_trends__metric_type__get",
        "parameters": [
          {
            "name": "metric_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Metric Type"
            }
          },
          {
            "name": "time_range_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "default": 24,
              "title": "Time Range Hours"
            }
          },
          {
            "name": "interval_minutes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1440,
              "minimum": 5,
              "default": 60,
              "title": "Interval Minutes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TrendDataPoint"
                  },
                  "title": "Response Get Trend Data Api Dashboard Trends  Metric Type  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/analytics/summary": {
      "get": {
        "tags": [
          "dashboard",
          "dashboard"
        ],
        "summary": "Get Analytics Summary",
        "description": "Get analytics summary.\n\nReturns analytics including:\n- System performance overview\n- Service health summary\n- Usage patterns\n- Top performing and problematic areas",
        "operationId": "get_analytics_summary_api_dashboard_analytics_summary_get",
        "parameters": [
          {
            "name": "time_range_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "default": 24,
              "title": "Time Range Hours"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Analytics Summary Api Dashboard Analytics Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/keys": {
      "get": {
        "tags": [
          "api_keys"
        ],
        "summary": "List API keys",
        "description": "List all API keys for the current user.\n\nArgs:\n    request: Raw HTTP request (required by SlowAPI for headers)\n    response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    key_service: Injected key service\n\nReturns:\n    List of API keys",
        "operationId": "list_keys_api_user_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyResponse"
                  },
                  "type": "array",
                  "title": "Response List Keys Api User Keys Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api_keys"
        ],
        "summary": "Create a new API key",
        "description": "Create a new API key.\n\nArgs:\n    request: Raw HTTP request (required by SlowAPI for headers)\n    response: Raw HTTP response (required by SlowAPI for headers)\n    key_data: API key data\n    principal: Current authenticated principal\n    key_service: Injected key service\n\nReturns:\n    The created API key\n\nRaises:\n    HTTPException: If the key is invalid",
        "operationId": "create_key_api_user_keys_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/keys/{key_id}": {
      "delete": {
        "tags": [
          "api_keys"
        ],
        "summary": "Delete an API key",
        "description": "Delete an API key.\n\nArgs:\n    request: Raw HTTP request (required by SlowAPI for headers)\n    response: Raw HTTP response (required by SlowAPI for headers)\n    key_service: Injected key service\n    principal: Current authenticated principal\n    key_id: The API key ID\n\nRaises:\n    HTTPException: If the key is not found or does not belong to the user",
        "operationId": "delete_key_api_user_keys__key_id__delete",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The API key ID",
              "title": "Key Id"
            },
            "description": "The API key ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/keys/validate": {
      "post": {
        "tags": [
          "api_keys"
        ],
        "summary": "Validate an API key",
        "description": "Validate an API key with the service.\n\nArgs:\n    request: Raw HTTP request (required by SlowAPI for headers)\n    response: Raw HTTP response (required by SlowAPI for headers)\n    key_data: API key data\n    principal: Current authenticated principal\n    key_service: Injected key service\n\nReturns:\n    Validation result",
        "operationId": "validate_key_api_user_keys_validate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyValidateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyValidateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/keys/{key_id}/rotate": {
      "post": {
        "tags": [
          "api_keys"
        ],
        "summary": "Rotate an API key",
        "description": "Rotate an API key.\n\nArgs:\n    request: Raw HTTP request (required by SlowAPI for headers)\n    response: Raw HTTP response (required by SlowAPI for headers)\n    key_data: New API key data\n    key_id: The API key ID\n    principal: Current authenticated principal\n    key_service: Injected key service\n\nReturns:\n    The updated API key\n\nRaises:\n    HTTPException: If the key is not found or does not belong to the user",
        "operationId": "rotate_key_api_user_keys__key_id__rotate_post",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The API key ID",
              "title": "Key Id"
            },
            "description": "The API key ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyRotateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/keys/metrics": {
      "get": {
        "tags": [
          "api_keys"
        ],
        "summary": "Get API key metrics",
        "description": "Get API key health metrics.\n\nArgs:\n    request: Raw HTTP request (required by SlowAPI for headers)\n    response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n\nReturns:\n    Key health metrics",
        "operationId": "get_metrics_api_user_keys_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Metrics Api User Keys Metrics Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/keys/audit": {
      "get": {
        "tags": [
          "api_keys"
        ],
        "summary": "Get API key audit log",
        "description": "Get API key audit log for a user.\n\nArgs:\n    request: Raw HTTP request (required by SlowAPI for headers)\n    response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    limit: Maximum number of entries to return\n    monitoring_service: Key monitoring service\n\nReturns:\n    List of audit log entries",
        "operationId": "get_audit_log_api_user_keys_audit_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Audit Log Api User Keys Audit Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register a new user",
        "description": "Register a new user.\n\nArgs:\n    user_data: User registration data\n    user_service: Injected user service\n\nReturns:\n    The created user\n\nRaises:\n    HTTPException: If the email is already registered",
        "operationId": "register_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/": {
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Chat",
        "description": "Handle chat requests with optional streaming and session persistence.\n\nArgs:\n    request: Chat request with messages and options\n    http_request: Raw HTTP request (required by SlowAPI for headers)\n    http_response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    chat_service: Unified chat service\n\nReturns:\n    Chat response with assistant message",
        "operationId": "chat_api_chat__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/sessions": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "List Sessions",
        "description": "List chat sessions for the current user.\n\nArgs:\n    http_request: Raw HTTP request (required by SlowAPI for headers)\n    http_response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    chat_service: Unified chat service\n\nReturns:\n    List of user's chat sessions",
        "operationId": "list_sessions_api_chat_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response List Sessions Api Chat Sessions Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Create Session",
        "description": "Create a new chat session.\n\nArgs:\n    body: Session creation request body\n    http_request: Raw HTTP request (required by SlowAPI for headers)\n    http_response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    chat_service: Unified chat service",
        "operationId": "create_session_api_chat_sessions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Create Session Api Chat Sessions Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/sessions/{session_id}": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Get Session",
        "description": "Get a specific chat session.\n\nArgs:\n    session_id: Session ID\n    http_request: Raw HTTP request (required by SlowAPI for headers)\n    http_response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    chat_service: Unified chat service\n\nReturns:\n    Session details",
        "operationId": "get_session_api_chat_sessions__session_id__get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Session Api Chat Sessions  Session Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "chat"
        ],
        "summary": "Delete Session",
        "description": "Delete a chat session.\n\nArgs:\n    session_id: Session ID to delete\n    http_request: Raw HTTP request (required by SlowAPI for headers)\n    http_response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    chat_service: Unified chat service\n\nReturns:\n    Success message",
        "operationId": "delete_session_api_chat_sessions__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/sessions/{session_id}/messages": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Get Session Messages",
        "description": "Get messages from a chat session.\n\nArgs:\n    session_id: Session ID\n    http_request: Raw HTTP request (required by SlowAPI for headers)\n    http_response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    chat_service: Unified chat service\n    limit: Maximum number of messages to return\n\nReturns:\n    List of session messages",
        "operationId": "get_session_messages_api_chat_sessions__session_id__messages_get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Session Messages Api Chat Sessions  Session Id  Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Create Message",
        "description": "Create a new message in a session.\n\nArgs:\n    session_id: Session ID\n    http_request: Raw HTTP request (required by SlowAPI for headers)\n    http_response: Raw HTTP response (required by SlowAPI for headers)\n    principal: Current authenticated principal\n    chat_service: Unified chat service\n    body: Message creation request body",
        "operationId": "create_message_api_chat_sessions__session_id__messages_post",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Message Api Chat Sessions  Session Id  Messages Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/upload": {
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "Upload File",
        "description": "Upload and process a single file attachment.\n\nSecurity features:\n- File type validation\n- Size limit enforcement\n- Virus scanning (when available)\n- User isolation\n\nAI features:\n- Document text extraction\n- Travel information analysis\n- Structured data extraction",
        "operationId": "upload_file_api_attachments_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_api_attachments_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/upload/batch": {
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "Upload Files Batch",
        "description": "Upload and process multiple files in a batch.\n\nValidates total session size limit and processes files individually\nfor better error handling and progress tracking.",
        "operationId": "upload_files_batch_api_attachments_upload_batch_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_files_batch_api_attachments_upload_batch_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/files/{file_id}": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Get File Metadata",
        "description": "Get metadata and analysis results for an uploaded file.\n\nOnly returns files owned by the current user for security.",
        "operationId": "get_file_metadata_api_attachments_files__file_id__get",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "attachments"
        ],
        "summary": "Delete File",
        "description": "Delete an uploaded file and its associated data.\n\nOnly allows deletion of files owned by the current user.",
        "operationId": "delete_file_api_attachments_files__file_id__delete",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFileResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/files": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "List User Files",
        "description": "List files uploaded by the current user with pagination.",
        "operationId": "list_user_files_api_attachments_files_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/files/{file_id}/download": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Download File",
        "description": "Download a file securely.\n\nOnly allows download of files owned by the current user.\nReturns the file content with appropriate headers for download.",
        "operationId": "download_file_api_attachments_files__file_id__download_get",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/attachments/trips/{trip_id}/attachments": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "List Trip Attachments",
        "description": "List all attachments for a specific trip.\n\nOnly returns attachments for trips the user has access to.\n\nSecurity features:\n- Trip access verification (owner or collaborator)\n- Audit logging for access attempts\n- Authorization error handling",
        "operationId": "list_trip_attachments_api_attachments_trips__trip_id__attachments_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trip Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/": {
      "post": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Create Trip",
        "description": "Create a new trip.\n\nArgs:\n    trip_request: Trip creation request\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Created trip",
        "operationId": "create_trip_api_trips__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTripRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "List Trips",
        "description": "List trips for the current user.\n\nArgs:\n    skip: Number of trips to skip\n    limit: Number of trips to return\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    List of trips",
        "operationId": "list_trips_api_trips__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of trips to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of trips to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of trips to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of trips to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}": {
      "get": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Get Trip",
        "description": "Get a trip by ID.\n\nArgs:\n    trip_id: Trip ID\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Trip details",
        "operationId": "get_trip_api_trips__trip_id__get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Update Trip",
        "description": "Update a trip.\n\nArgs:\n    trip_id: Trip ID\n    trip_request: Trip update request\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Updated trip",
        "operationId": "update_trip_api_trips__trip_id__put",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTripRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Delete Trip",
        "description": "Delete a trip.\n\nArgs:\n    trip_id: Trip ID\n    principal: Current authenticated principal\n    trip_service: Trip service instance",
        "operationId": "delete_trip_api_trips__trip_id__delete",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}/summary": {
      "get": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Get Trip Summary",
        "description": "Get trip summary.\n\nArgs:\n    trip_id: Trip ID\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Trip summary",
        "operationId": "get_trip_summary_api_trips__trip_id__summary_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripSummaryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}/preferences": {
      "put": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Update Trip Preferences",
        "description": "Update trip preferences.\n\nArgs:\n    trip_id: Trip ID\n    preferences_request: Trip preferences update request\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Updated trip",
        "operationId": "update_trip_preferences_api_trips__trip_id__preferences_put",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripPreferencesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}/duplicate": {
      "post": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Duplicate Trip",
        "description": "Duplicate a trip.\n\nArgs:\n    trip_id: Trip ID to duplicate\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Duplicated trip",
        "operationId": "duplicate_trip_api_trips__trip_id__duplicate_post",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/search": {
      "get": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Search Trips",
        "description": "Search trips.\n\nArgs:\n    q: Search query\n    params: Query parameters (q, status, skip, limit)\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Search results",
        "operationId": "search_trips_api_trips_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query",
              "title": "Q"
            },
            "description": "Search query"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Status filter",
              "title": "Status"
            },
            "description": "Status filter"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of trips to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of trips to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of trips to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of trips to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}/itinerary": {
      "get": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Get Trip Itinerary",
        "description": "Get trip itinerary.\n\nArgs:\n    trip_id: Trip ID\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Trip itinerary",
        "operationId": "get_trip_itinerary_api_trips__trip_id__itinerary_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_ItineraryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}/export": {
      "post": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Export Trip",
        "description": "Export trip.\n\nArgs:\n    trip_id: Trip ID\n    export_format: Export format requested by the caller\n    format_: Optional keyword alias used by some internal tests\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nReturns:\n    Export data",
        "operationId": "export_trip_api_trips__trip_id__export_post",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          },
          {
            "name": "export_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export format",
              "default": "pdf",
              "title": "Export Format"
            },
            "description": "Export format"
          },
          {
            "name": "format_",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Format "
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_ExportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/suggestions": {
      "get": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Get Trip Suggestions",
        "description": "Get personalized trip suggestions based on user preferences and history.\n\nArgs:\n    limit: Maximum number of suggestions to return\n    budget_max: Optional maximum budget filter\n    category: Optional category filter\n    principal: Current authenticated principal\n    memory_service: Injected memory service\n\nReturns:\n    List of trip suggestions",
        "operationId": "get_trip_suggestions_api_trips_suggestions_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "description": "Number of suggestions to return",
              "default": 4,
              "title": "Limit"
            },
            "description": "Number of suggestions to return"
          },
          {
            "name": "budget_max",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Maximum budget filter",
              "title": "Budget Max"
            },
            "description": "Maximum budget filter"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category"
            },
            "description": "Filter by category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripSuggestionResponse"
                  },
                  "title": "Response Get Trip Suggestions Api Trips Suggestions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}/share": {
      "post": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Share Trip",
        "description": "Share a trip with other users.\n\nOnly the trip owner can share their trip with others.\n\nArgs:\n    trip_id: Trip ID\n    share_request: Share request with user emails and permissions\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n    user_service: User service used to resolve collaborator identities\n\nReturns:\n    List of successfully added collaborators\n\nRaises:\n    HTTPException: If not authorized or trip not found",
        "operationId": "share_trip_api_trips__trip_id__share_post",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripShareRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TripCollaboratorResponse"
                  },
                  "title": "Response Share Trip Api Trips  Trip Id  Share Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}/collaborators": {
      "get": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "List Trip Collaborators",
        "description": "List all collaborators for a trip.\n\nAccessible by trip owner and collaborators with appropriate permissions.\n\nArgs:\n    trip_id: Trip ID\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n    user_service: User service used to hydrate collaborator metadata\n\nReturns:\n    List of trip collaborators with their permissions\n\nRaises:\n    HTTPException: If not authorized or trip not found",
        "operationId": "list_trip_collaborators_api_trips__trip_id__collaborators_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripCollaboratorsListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/trips/{trip_id}/collaborators/{user_id}": {
      "put": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Update Collaborator Permissions",
        "description": "Update collaborator permissions for a trip.\n\nOnly the trip owner can update collaborator permissions.\n\nArgs:\n    trip_id: Trip ID\n    user_id: Collaborator user ID to update\n    update_request: New permission level\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n    user_service: User service used to fetch collaborator details\n\nReturns:\n    Updated collaborator information\n\nRaises:\n    HTTPException: If not authorized or collaborator not found",
        "operationId": "update_collaborator_permissions_api_trips__trip_id__collaborators__user_id__put",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripCollaboratorUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripCollaboratorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "trips",
          "trips"
        ],
        "summary": "Remove Collaborator",
        "description": "Remove a collaborator from a trip.\n\nOnly the trip owner can remove collaborators.\n\nArgs:\n    trip_id: Trip ID\n    user_id: Collaborator user ID to remove\n    principal: Current authenticated principal\n    trip_service: Trip service instance\n\nRaises:\n    HTTPException: If not authorized or collaborator not found",
        "operationId": "remove_collaborator_api_trips__trip_id__collaborators__user_id__delete",
        "parameters": [
          {
            "name": "trip_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trip Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/search": {
      "post": {
        "tags": [
          "flights"
        ],
        "summary": "Search Flights",
        "description": "Search for flight offers using the unified flight service.\n\nArgs:\n    request: Typed flight search parameters validated by Pydantic.\n    principal: Authenticated user context (unused directly but enforces auth).\n    flight_service: Injected flight service instance.\n\nReturns:\n    Search results including offers, metadata, and cache indicators.\n\nRaises:\n    HTTPException: If the underlying service raises a handled error.",
        "operationId": "search_flights_api_flights_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/offers/{offer_id}": {
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "Get Flight Offer",
        "description": "Retrieve detailed information about a specific flight offer.\n\nArgs:\n    offer_id: Identifier returned from a previous search.\n    principal: Authenticated user context.\n    flight_service: Injected flight service instance.\n\nReturns:\n    Detailed flight offer information.\n\nRaises:\n    HTTPException: 404 if the offer is unknown, 502 for service failures.",
        "operationId": "get_flight_offer_api_flights_offers__offer_id__get",
        "parameters": [
          {
            "name": "offer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Offer Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightOffer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/bookings": {
      "post": {
        "tags": [
          "flights"
        ],
        "summary": "Book Flight",
        "description": "Book a flight offer for the authenticated user.\n\nArgs:\n    request: Booking payload containing offer and passenger data.\n    principal: Authenticated user context.\n    flight_service: Injected flight service.\n\nReturns:\n    Confirmed booking details.\n\nRaises:\n    HTTPException: 404 if the offer cannot be found, 422 for validation\n    errors, and 502 for downstream failures.",
        "operationId": "book_flight_api_flights_bookings_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightBookingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightBooking"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "flights"
        ],
        "summary": "List Bookings",
        "description": "List bookings for the authenticated user with optional filters.\n\nArgs:\n    trip_id: Optional trip identifier filter.\n    status_filter: Optional booking status filter.\n    limit: Maximum number of bookings to return.\n    principal: Authenticated user context.\n    flight_service: Injected flight service.\n\nReturns:\n    A list of bookings matching the provided filters.",
        "operationId": "list_bookings_api_flights_bookings_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Trip Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/tripsage_core__models__schemas_common__enums__BookingStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlightBooking"
                  },
                  "title": "Response List Bookings Api Flights Bookings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/bookings/{booking_id}": {
      "delete": {
        "tags": [
          "flights"
        ],
        "summary": "Cancel Booking",
        "description": "Cancel an existing booking for the authenticated user.\n\nArgs:\n    booking_id: Identifier of the booking to cancel.\n    principal: Authenticated user context.\n    flight_service: Injected flight service.\n\nRaises:\n    HTTPException: 404 if the booking is not found or cannot be cancelled,\n    502 for downstream errors.",
        "operationId": "cancel_booking_api_flights_bookings__booking_id__delete",
        "parameters": [
          {
            "name": "booking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Booking Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/search": {
      "post": {
        "tags": [
          "accommodations"
        ],
        "summary": "Search Accommodations",
        "description": "Search for accommodations based on the provided criteria.\n\nArgs:\n    request: Accommodation search parameters\n    principal: Current authenticated principal\n    accommodation_service: Injected accommodation service\n\nReturns:\n    Accommodation search results",
        "operationId": "search_accommodations_api_accommodations_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tripsage_core__models__api__accommodation_models__AccommodationSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/details": {
      "post": {
        "tags": [
          "accommodations"
        ],
        "summary": "Get Accommodation Details",
        "description": "Get details of a specific accommodation listing.\n\nArgs:\n    request: Accommodation details parameters\n    principal: Current authenticated principal\n    accommodation_service: Injected accommodation service\n\nReturns:\n    Accommodation details\n\nRaises:\n    ResourceNotFoundError: If the accommodation listing is not found",
        "operationId": "get_accommodation_details_api_accommodations_details_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccommodationDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccommodationDetailsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/saved": {
      "post": {
        "tags": [
          "accommodations"
        ],
        "summary": "Save Accommodation",
        "description": "Save an accommodation listing for a trip.\n\nArgs:\n    request: Save accommodation request\n    principal: Current authenticated principal\n    accommodation_service: Injected accommodation service\n\nReturns:\n    Saved accommodation response\n\nRaises:\n    ResourceNotFoundError: If the accommodation listing is not found",
        "operationId": "save_accommodation_api_accommodations_saved_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedAccommodationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedAccommodationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "accommodations"
        ],
        "summary": "List Saved Accommodations",
        "description": "List saved accommodations for a user, optionally filtered by trip.\n\nArgs:\n    trip_id: Optional trip ID to filter by\n    principal: Current authenticated principal\n    accommodation_service: Injected accommodation service\n\nReturns:\n    List of saved accommodations",
        "operationId": "list_saved_accommodations_api_accommodations_saved_get",
        "parameters": [
          {
            "name": "trip_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Trip Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SavedAccommodationResponse"
                  },
                  "title": "Response List Saved Accommodations Api Accommodations Saved Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/saved/{saved_accommodation_id}": {
      "delete": {
        "tags": [
          "accommodations"
        ],
        "summary": "Delete Saved Accommodation",
        "description": "Delete a saved accommodation.\n\nArgs:\n    saved_accommodation_id: Saved accommodation ID\n    principal: Current authenticated principal\n    accommodation_service: Injected accommodation service\n\nRaises:\n    ResourceNotFoundError: If the saved accommodation is not found",
        "operationId": "delete_saved_accommodation_api_accommodations_saved__saved_accommodation_id__delete",
        "parameters": [
          {
            "name": "saved_accommodation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Saved Accommodation Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/accommodations/saved/{saved_accommodation_id}/status": {
      "patch": {
        "tags": [
          "accommodations"
        ],
        "summary": "Update Saved Accommodation Status",
        "description": "Update the status of a saved accommodation.\n\nArgs:\n    saved_accommodation_id: Saved accommodation ID\n    status: New status\n    principal: Current authenticated principal\n    accommodation_service: Injected accommodation service\n\nReturns:\n    Updated saved accommodation\n\nRaises:\n    ResourceNotFoundError: If the saved accommodation is not found",
        "operationId": "update_saved_accommodation_status_api_accommodations_saved__saved_accommodation_id__status_patch",
        "parameters": [
          {
            "name": "saved_accommodation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Saved Accommodation Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/tripsage_core__services__business__accommodation_service__BookingStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedAccommodationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/search": {
      "post": {
        "tags": [
          "destinations"
        ],
        "summary": "Search Destinations",
        "description": "Search destinations using the consolidated destination service.",
        "operationId": "search_destinations_api_destinations_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DestinationSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestinationSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/{destination_id}": {
      "get": {
        "tags": [
          "destinations"
        ],
        "summary": "Get Destination Details",
        "description": "Retrieve detailed information about a destination.",
        "operationId": "get_destination_details_api_destinations__destination_id__get",
        "parameters": [
          {
            "name": "destination_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Destination Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Destination-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/saved": {
      "get": {
        "tags": [
          "destinations"
        ],
        "summary": "List Saved Destinations",
        "description": "Return destinations saved by the authenticated user.",
        "operationId": "list_saved_destinations_api_destinations_saved_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SavedDestination"
                  },
                  "type": "array",
                  "title": "Response List Saved Destinations Api Destinations Saved Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "destinations"
        ],
        "summary": "Save Destination",
        "description": "Save a destination for the authenticated user.",
        "operationId": "save_destination_api_destinations_saved_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedDestinationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedDestination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/recommendations": {
      "post": {
        "tags": [
          "destinations"
        ],
        "summary": "Get Destination Recommendations",
        "description": "Get personalized destination recommendations.",
        "operationId": "get_destination_recommendations_api_destinations_recommendations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DestinationRecommendationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DestinationRecommendation-Output"
                  },
                  "type": "array",
                  "title": "Response Get Destination Recommendations Api Destinations Recommendations Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/itineraries": {
      "get": {
        "tags": [
          "itineraries"
        ],
        "summary": "List Itineraries",
        "description": "List all itineraries for the current user.",
        "operationId": "list_itineraries_api_itineraries_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ItineraryResponse"
                  },
                  "type": "array",
                  "title": "Response List Itineraries Api Itineraries Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "itineraries"
        ],
        "summary": "Create Itinerary",
        "description": "Create a new itinerary.",
        "operationId": "create_itinerary_api_itineraries_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItineraryCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/itineraries/search": {
      "post": {
        "tags": [
          "itineraries"
        ],
        "summary": "Search Itineraries",
        "description": "Search for itineraries based on criteria.",
        "operationId": "search_itineraries_api_itineraries_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItinerarySearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItinerarySearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/itineraries/{itinerary_id}": {
      "get": {
        "tags": [
          "itineraries"
        ],
        "summary": "Get Itinerary",
        "description": "Get a specific itinerary by ID.",
        "operationId": "get_itinerary_api_itineraries__itinerary_id__get",
        "parameters": [
          {
            "name": "itinerary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Itinerary Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "itineraries"
        ],
        "summary": "Update Itinerary",
        "description": "Update an existing itinerary.",
        "operationId": "update_itinerary_api_itineraries__itinerary_id__put",
        "parameters": [
          {
            "name": "itinerary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Itinerary Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItineraryUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "itineraries"
        ],
        "summary": "Delete Itinerary",
        "description": "Delete an itinerary.",
        "operationId": "delete_itinerary_api_itineraries__itinerary_id__delete",
        "parameters": [
          {
            "name": "itinerary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Itinerary Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/itineraries/{itinerary_id}/items": {
      "post": {
        "tags": [
          "itineraries"
        ],
        "summary": "Add Item To Itinerary",
        "description": "Add an item to an itinerary.",
        "operationId": "add_item_to_itinerary_api_itineraries__itinerary_id__items_post",
        "parameters": [
          {
            "name": "itinerary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Itinerary Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItineraryItemCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/itineraries/{itinerary_id}/items/{item_id}": {
      "get": {
        "tags": [
          "itineraries"
        ],
        "summary": "Get Itinerary Item",
        "description": "Get a specific item from an itinerary.",
        "operationId": "get_itinerary_item_api_itineraries__itinerary_id__items__item_id__get",
        "parameters": [
          {
            "name": "itinerary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Itinerary Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "itineraries"
        ],
        "summary": "Update Itinerary Item",
        "description": "Update an item in an itinerary.",
        "operationId": "update_itinerary_item_api_itineraries__itinerary_id__items__item_id__put",
        "parameters": [
          {
            "name": "itinerary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Itinerary Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItineraryItemUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "itineraries"
        ],
        "summary": "Delete Itinerary Item",
        "description": "Delete an item from an itinerary.",
        "operationId": "delete_itinerary_item_api_itineraries__itinerary_id__items__item_id__delete",
        "parameters": [
          {
            "name": "itinerary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Itinerary Id"
            }
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/itineraries/{itinerary_id}/conflicts": {
      "get": {
        "tags": [
          "itineraries"
        ],
        "summary": "Check Itinerary Conflicts",
        "description": "Check for conflicts in an itinerary schedule.",
        "operationId": "check_itinerary_conflicts_api_itineraries__itinerary_id__conflicts_get",
        "parameters": [
          {
            "name": "itinerary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Itinerary Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryConflictCheckResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/itineraries/optimize": {
      "post": {
        "tags": [
          "itineraries"
        ],
        "summary": "Optimize Itinerary",
        "description": "Optimize an itinerary based on provided settings.",
        "operationId": "optimize_itinerary_api_itineraries_optimize_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItineraryOptimizeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItineraryOptimizeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/search": {
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Search Activities",
        "description": "Search for activities based on provided criteria using Google Maps Places API.\n\nThis endpoint searches for activities, attractions, and points of interest\nin the specified destination using real-time data from Google Maps.",
        "operationId": "search_activities_api_activities_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivitySearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivitySearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/{activity_id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Activity Details",
        "description": "Get detailed information about a specific activity.\n\nRetrieves details for an activity including enhanced\ninformation from Google Maps Places API.",
        "operationId": "get_activity_details_api_activities__activity_id__get",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/save": {
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Save Activity",
        "description": "Save an activity for a user.\n\nSecurity features:\n- User authentication required\n- Trip access verification if trip_id provided\n- Audit logging for save operations\n- Database persistence with user isolation",
        "operationId": "save_activity_api_activities_save_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveActivityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SavedActivityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/saved": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Saved Activities",
        "description": "Get all activities saved by a user.\n\nSecurity features:\n- User authentication required\n- User data isolation (only returns user's saved activities)\n- Audit logging for data access\n- Pagination support",
        "operationId": "get_saved_activities_api_activities_saved_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SavedActivityResponse"
                  },
                  "title": "Response Get Saved Activities Api Activities Saved Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activities/saved/{activity_id}": {
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Delete Saved Activity",
        "description": "Delete a saved activity for a user.\n\nSecurity features:\n- User authentication required\n- User authorization (can only delete own saved activities)\n- Audit logging for deletion operations\n- Data integrity checks",
        "operationId": "delete_saved_activity_api_activities_saved__activity_id__delete",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/unified": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Unified Search",
        "description": "Perform a unified search across multiple resource types with caching.\n\nThis endpoint searches across destinations, activities, accommodations,\nand flights (when applicable) to provide travel search results.\nResults are aggregated, filtered, sorted, and cached for performance.",
        "operationId": "unified_search_api_search_unified_post",
        "parameters": [
          {
            "name": "use_cache",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to use cached results",
              "default": true,
              "title": "Use Cache"
            },
            "description": "Whether to use cached results"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedSearchAggregateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/suggest": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Search Suggestions",
        "description": "Get search suggestions based on partial query.\n\nThis endpoint provides intelligent search suggestions including popular\ndestinations, activity types, and common search patterns to help users\ndiscover travel options.",
        "operationId": "search_suggestions_api_search_suggest_get",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "Partial search query",
              "title": "Query"
            },
            "description": "Partial search query"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "description": "Maximum number of suggestions",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of suggestions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Search Suggestions Api Search Suggest Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/recent": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get Recent Searches",
        "description": "Get recent searches for the authenticated user.\n\nReturns the user's search history ordered by most recent first.",
        "operationId": "get_recent_searches_api_search_recent_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 50,
              "minimum": 1,
              "description": "Maximum number of searches to return",
              "default": 10,
              "title": "Limit"
            },
            "description": "Maximum number of searches to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "title": "Response Get Recent Searches Api Search Recent Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/save": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Save Search",
        "description": "Save a search query for the authenticated user.\n\nSaves the search parameters to the user's search history for\nquick access and personalization.",
        "operationId": "save_search_api_search_save_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Save Search Api Search Save Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/saved/{search_id}": {
      "delete": {
        "tags": [
          "search"
        ],
        "summary": "Delete Saved Search",
        "description": "Delete a saved search for the authenticated user.\n\nRemoves the specified search from the user's search history.",
        "operationId": "delete_saved_search_api_search_saved__search_id__delete",
        "parameters": [
          {
            "name": "search_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Search Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/bulk": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Bulk Search",
        "description": "Perform multiple searches in a single request for efficiency.\n\nUseful for comparing multiple destinations or search variations.\nResults are processed in parallel for optimal performance.",
        "operationId": "bulk_search_api_search_bulk_post",
        "parameters": [
          {
            "name": "use_cache",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to use cached results",
              "default": true,
              "title": "Use Cache"
            },
            "description": "Whether to use cached results"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedSearchRequest"
                },
                "title": "Requests"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnifiedSearchAggregateResponse"
                  },
                  "title": "Response Bulk Search Api Search Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/analytics": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get Search Analytics",
        "description": "Get search analytics for a specific date.\n\nOnly available to authenticated users for their own analytics.",
        "operationId": "get_search_analytics_api_search_analytics_get",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Date in YYYY-MM-DD format",
              "title": "Date"
            },
            "description": "Date in YYYY-MM-DD format"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/conversation": {
      "post": {
        "tags": [
          "memory",
          "memory"
        ],
        "summary": "Add Conversation Memory",
        "description": "Add conversation messages to user memory.\n\nArgs:\n    payload: Conversation memory request\n    principal: Current authenticated principal\n    memory_service: Unified memory service\n    response: Response object for SlowAPI header injection\n    request: Raw HTTP request (required by SlowAPI limiter)\n\nReturns:\n    Operation result",
        "operationId": "add_conversation_memory_api_memory_conversation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationMemoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Add Conversation Memory Api Memory Conversation Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/context": {
      "get": {
        "tags": [
          "memory",
          "memory"
        ],
        "summary": "Get User Context",
        "description": "Get user context and preferences.\n\nArgs:\n    principal: Current authenticated principal\n    memory_service: Unified memory service\n\nReturns:\n    UserContextResponse model with preferences and context",
        "operationId": "get_user_context_api_memory_context_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContextResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/search": {
      "post": {
        "tags": [
          "memory",
          "memory"
        ],
        "summary": "Search Memories",
        "description": "Search user memories.\n\nArgs:\n    payload: Search request\n    principal: Current authenticated principal\n    memory_service: Unified memory service\n    response: Response object for SlowAPI header injection\n    request: Raw HTTP request (required by SlowAPI limiter)\n\nReturns:\n    List of matching memories",
        "operationId": "search_memories_api_memory_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchMemoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemorySearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/preferences": {
      "put": {
        "tags": [
          "memory",
          "memory"
        ],
        "summary": "Update Preferences",
        "description": "Update user preferences.\n\nArgs:\n    payload: Preferences update request\n    principal: Current authenticated principal\n    memory_service: Unified memory service\n\nReturns:\n    Updated preferences",
        "operationId": "update_preferences_api_memory_preferences_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePreferencesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Update Preferences Api Memory Preferences Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/preference": {
      "post": {
        "tags": [
          "memory",
          "memory"
        ],
        "summary": "Add Preference",
        "description": "Add or update a single user preference.\n\nArgs:\n    key: Preference key\n    value: Preference value\n    principal: Current authenticated principal\n    memory_service: Unified memory service\n    response: Response object for SlowAPI header injection\n    category: Preference category\n    request: Raw HTTP request (required by SlowAPI limiter)\n\nReturns:\n    Updated preference",
        "operationId": "add_preference_api_memory_preference_post",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Value"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "general",
              "title": "Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Add Preference Api Memory Preference Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/memory/{memory_id}": {
      "delete": {
        "tags": [
          "memory",
          "memory"
        ],
        "summary": "Delete Memory",
        "description": "Delete a specific memory.\n\nArgs:\n    memory_id: Memory ID to delete\n    principal: Current authenticated principal\n    memory_service: Unified memory service\n\nReturns:\n    Success message",
        "operationId": "delete_memory_api_memory_memory__memory_id__delete",
        "parameters": [
          {
            "name": "memory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Memory Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Memory Api Memory Memory  Memory Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/stats": {
      "get": {
        "tags": [
          "memory",
          "memory"
        ],
        "summary": "Get Memory Stats",
        "description": "Get memory statistics for the user.\n\nArgs:\n    principal: Current authenticated principal\n    memory_service: Unified memory service\n\nReturns:\n    Memory statistics",
        "operationId": "get_memory_stats_api_memory_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Memory Stats Api Memory Stats Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/clear": {
      "delete": {
        "tags": [
          "memory",
          "memory"
        ],
        "summary": "Clear User Memory",
        "description": "Clear all memories for the user.\n\nArgs:\n    confirm: Confirmation flag\n    principal: Current authenticated principal\n    memory_service: Unified memory service\n\nReturns:\n    Operation result",
        "operationId": "clear_user_memory_api_memory_clear_delete",
        "parameters": [
          {
            "name": "confirm",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Confirm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Clear User Memory Api Memory Clear Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ws/health": {
      "get": {
        "tags": [
          "websocket"
        ],
        "summary": "Websocket Health",
        "description": "Return health metrics for the WebSocket subsystem.",
        "operationId": "websocket_health_api_ws_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Websocket Health Api Ws Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/ws/connections": {
      "get": {
        "tags": [
          "websocket"
        ],
        "summary": "List Websocket Connections",
        "description": "List active WebSocket connections (admin use).",
        "operationId": "list_websocket_connections_api_ws_connections_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List Websocket Connections Api Ws Connections Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/ws/connections/{connection_id}": {
      "delete": {
        "tags": [
          "websocket"
        ],
        "summary": "Disconnect Websocket Connection",
        "description": "Disconnect a specific WebSocket connection.",
        "operationId": "disconnect_websocket_connection_api_ws_connections__connection_id__delete",
        "parameters": [
          {
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Disconnect Websocket Connection Api Ws Connections  Connection Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/preferences": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Preferences",
        "description": "Get the authenticated user's preferences.\n\nArgs:\n    principal: Authenticated principal from JWT or API key\n    user_service: Injected user service\n\nReturns:\n    UserPreferencesResponse: The user's preferences\n\nRaises:\n    HTTPException: If user is not found",
        "operationId": "get_user_preferences_api_users_preferences_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Preferences",
        "description": "Update the authenticated user's preferences.\n\nThis endpoint performs a partial update, merging the provided\npreferences with existing ones.\n\nArgs:\n    preferences_request: New preferences to set\n    principal: Authenticated principal from JWT or API key\n    user_service: Injected user service\n\nReturns:\n    UserPreferencesResponse: The updated preferences\n\nRaises:\n    HTTPException: If update fails",
        "operationId": "update_user_preferences_api_users_preferences_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPreferencesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/agents": {
      "get": {
        "tags": [
          "configuration",
          "configuration"
        ],
        "summary": "List Agent Types",
        "description": "List all available agent types.",
        "operationId": "list_agent_types_api_config_agents_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Agent Types Api Config Agents Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/agents/{agent_type}": {
      "get": {
        "tags": [
          "configuration",
          "configuration"
        ],
        "summary": "Get Agent Config",
        "description": "Get current configuration for a specific agent type.",
        "operationId": "get_agent_config_api_config_agents__agent_type__get",
        "parameters": [
          {
            "name": "agent_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "configuration",
          "configuration"
        ],
        "summary": "Update Agent Config",
        "description": "Update configuration for a specific agent type.",
        "operationId": "update_agent_config_api_config_agents__agent_type__put",
        "parameters": [
          {
            "name": "agent_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Type"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/agents/{agent_type}/versions": {
      "get": {
        "tags": [
          "configuration",
          "configuration"
        ],
        "summary": "Get Agent Config Versions",
        "description": "Get configuration version history for an agent type.",
        "operationId": "get_agent_config_versions_api_config_agents__agent_type__versions_get",
        "parameters": [
          {
            "name": "agent_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationVersion-Output"
                  },
                  "title": "Response Get Agent Config Versions Api Config Agents  Agent Type  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/agents/{agent_type}/rollback/{version_id}": {
      "post": {
        "tags": [
          "configuration",
          "configuration"
        ],
        "summary": "Rollback Agent Config",
        "description": "Rollback agent configuration to a specific version.",
        "operationId": "rollback_agent_config_api_config_agents__agent_type__rollback__version_id__post",
        "parameters": [
          {
            "name": "agent_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Type"
            }
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/environment": {
      "get": {
        "tags": [
          "configuration",
          "configuration"
        ],
        "summary": "Get Environment Config",
        "description": "Get current environment configuration summary.",
        "operationId": "get_environment_config_api_config_environment_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccommodationAmenity": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Amenity name"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category",
            "description": "Amenity category"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Amenity icon identifier"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Amenity description"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AccommodationAmenity",
        "description": "Accommodation amenity information."
      },
      "AccommodationDetailsRequest": {
        "properties": {
          "listing_id": {
            "type": "string",
            "title": "Listing Id",
            "description": "Listing ID"
          },
          "check_in": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check In",
            "description": "Check-in date"
          },
          "check_out": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check Out",
            "description": "Check-out date"
          },
          "adults": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Adults",
            "description": "Number of adults"
          },
          "children": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Children",
            "description": "Number of children"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Source of the listing (e.g., 'airbnb', 'booking')"
          }
        },
        "type": "object",
        "required": [
          "listing_id"
        ],
        "title": "AccommodationDetailsRequest",
        "description": "Request model for retrieving accommodation details.",
        "example": {
          "adults": 2,
          "check_in": "2025-07-12",
          "check_out": "2025-07-15",
          "children": 1,
          "listing_id": "listing-123",
          "source": "booking"
        }
      },
      "AccommodationDetailsResponse": {
        "properties": {
          "listing": {
            "$ref": "#/components/schemas/AccommodationListing",
            "description": "Accommodation listing"
          },
          "availability": {
            "type": "boolean",
            "title": "Availability",
            "description": "Whether the accommodation is available for the dates"
          },
          "total_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Price",
            "description": "Total price for the stay (if dates provided)"
          }
        },
        "type": "object",
        "required": [
          "listing",
          "availability"
        ],
        "title": "AccommodationDetailsResponse",
        "description": "API response for accommodation details.",
        "example": {
          "availability": true,
          "listing": {
            "currency": "USD",
            "description": "Modern loft near downtown",
            "id": "listing-123",
            "location": {
              "address": "123 Main St",
              "city": "New York",
              "country": "USA"
            },
            "max_guests": 2,
            "name": "Central City Loft",
            "price_per_night": 245.0,
            "property_type": "apartment"
          },
          "total_price": 985.0
        }
      },
      "AccommodationHost": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Host ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Host name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url",
            "description": "Host avatar URL"
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating",
            "description": "Host rating"
          },
          "review_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Count",
            "description": "Host review count"
          },
          "response_rate": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Rate",
            "description": "Response rate"
          },
          "response_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Time",
            "description": "Response time"
          },
          "is_superhost": {
            "type": "boolean",
            "title": "Is Superhost",
            "description": "Whether host is a superhost",
            "default": false
          },
          "verification_badges": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Verification Badges",
            "description": "Host verification badges"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "AccommodationHost",
        "description": "Accommodation host information."
      },
      "AccommodationImage": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "Image URL"
          },
          "caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption",
            "description": "Image caption"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "description": "Whether this is the primary image",
            "default": false
          },
          "width": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width",
            "description": "Image width in pixels"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height",
            "description": "Image height in pixels"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "AccommodationImage",
        "description": "Accommodation image information."
      },
      "AccommodationListing": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Listing ID"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "User that stored the listing"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Property name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Property description"
          },
          "property_type": {
            "$ref": "#/components/schemas/PropertyType",
            "description": "Property type"
          },
          "location": {
            "$ref": "#/components/schemas/AccommodationLocation",
            "description": "Property location"
          },
          "price_per_night": {
            "type": "number",
            "title": "Price Per Night",
            "description": "Price per night"
          },
          "total_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Price",
            "description": "Total price for stay"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency code"
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating",
            "description": "Property rating"
          },
          "review_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Count",
            "description": "Number of reviews"
          },
          "max_guests": {
            "type": "integer",
            "title": "Max Guests",
            "description": "Maximum number of guests"
          },
          "bedrooms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bedrooms",
            "description": "Number of bedrooms"
          },
          "beds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Beds",
            "description": "Number of beds"
          },
          "bathrooms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bathrooms",
            "description": "Number of bathrooms"
          },
          "amenities": {
            "items": {
              "$ref": "#/components/schemas/AccommodationAmenity"
            },
            "type": "array",
            "title": "Amenities",
            "description": "Property amenities"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/AccommodationImage"
            },
            "type": "array",
            "title": "Images",
            "description": "Property images"
          },
          "host": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccommodationHost"
              },
              {
                "type": "null"
              }
            ],
            "description": "Host information"
          },
          "check_in_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check In Time",
            "description": "Check-in time"
          },
          "check_out_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check Out Time",
            "description": "Check-out time"
          },
          "cancellation_policy": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CancellationPolicy"
              },
              {
                "type": "null"
              }
            ],
            "description": "Cancellation policy"
          },
          "instant_book": {
            "type": "boolean",
            "title": "Instant Book",
            "description": "Whether instantly bookable",
            "default": false
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Data source (airbnb, booking.com, etc.)"
          },
          "source_listing_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Listing Id",
            "description": "Original listing ID from source"
          },
          "listing_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listing Url",
            "description": "URL to original listing"
          },
          "stored_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stored At",
            "description": "Timestamp when the listing snapshot was stored"
          },
          "nights": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nights",
            "description": "Number of nights for the search"
          },
          "is_available": {
            "type": "boolean",
            "title": "Is Available",
            "description": "Whether available for search dates",
            "default": true
          },
          "score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Score",
            "description": "Relevance score"
          },
          "price_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Score",
            "description": "Price competitiveness"
          },
          "location_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Score",
            "description": "Location convenience"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "property_type",
          "location",
          "price_per_night",
          "currency",
          "max_guests"
        ],
        "title": "AccommodationListing",
        "description": "Accommodation listing response model."
      },
      "AccommodationLocation": {
        "properties": {
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "Full address"
          },
          "city": {
            "type": "string",
            "title": "City",
            "description": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/province"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Country"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal/zip code"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Latitude coordinate"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Longitude coordinate"
          },
          "neighborhood": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Neighborhood",
            "description": "Neighborhood name"
          },
          "distance_to_center": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Distance To Center",
            "description": "Distance to city center in km"
          }
        },
        "type": "object",
        "required": [
          "city",
          "country"
        ],
        "title": "AccommodationLocation",
        "description": "Accommodation location information."
      },
      "AccommodationPreferences-Input": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccommodationType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Preferred accommodation type"
          },
          "min_rating": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rating",
            "description": "Minimum rating"
          },
          "max_price_per_night": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Maximum price per night"
          },
          "amenities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amenities",
            "description": "Required amenities"
          },
          "location_preference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Preference",
            "description": "Location preference (e.g., city_center, beach)"
          }
        },
        "type": "object",
        "title": "AccommodationPreferences",
        "description": "Accommodation preferences for trips."
      },
      "AccommodationPreferences-Output": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccommodationType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Preferred accommodation type"
          },
          "min_rating": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rating",
            "description": "Minimum rating"
          },
          "max_price_per_night": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Maximum price per night"
          },
          "amenities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amenities",
            "description": "Required amenities"
          },
          "location_preference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Preference",
            "description": "Location preference (e.g., city_center, beach)"
          }
        },
        "type": "object",
        "title": "AccommodationPreferences",
        "description": "Accommodation preferences for trips."
      },
      "AccommodationSearchRequest-Output": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User performing the accommodation search"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip identifier"
          },
          "location": {
            "type": "string",
            "title": "Location",
            "description": "Search location (city, address, etc.)"
          },
          "check_in": {
            "type": "string",
            "format": "date",
            "title": "Check In",
            "description": "Check-in date"
          },
          "check_out": {
            "type": "string",
            "format": "date",
            "title": "Check Out",
            "description": "Check-out date"
          },
          "guests": {
            "type": "integer",
            "maximum": 16.0,
            "minimum": 1.0,
            "title": "Guests",
            "description": "Number of guests",
            "default": 1
          },
          "adults": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Adults",
            "description": "Number of adults"
          },
          "children": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Children",
            "description": "Number of children"
          },
          "infants": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Infants",
            "description": "Number of infants"
          },
          "property_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PropertyType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Property Types",
            "description": "Preferred property types"
          },
          "min_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Price",
            "description": "Minimum price per night"
          },
          "max_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Price",
            "description": "Maximum price per night"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency code",
            "default": "USD"
          },
          "bedrooms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Bedrooms",
            "description": "Minimum number of bedrooms"
          },
          "beds": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 20.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Beds",
            "description": "Minimum number of beds"
          },
          "bathrooms": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Bathrooms",
            "description": "Minimum number of bathrooms"
          },
          "amenities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amenities",
            "description": "Required amenities"
          },
          "accessibility_features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accessibility Features",
            "description": "Required accessibility features"
          },
          "instant_book": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instant Book",
            "description": "Filter for instant bookable properties"
          },
          "free_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Free Cancellation",
            "description": "Filter for free cancellation"
          },
          "max_distance_km": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Distance Km",
            "description": "Maximum distance from center"
          },
          "min_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rating",
            "description": "Minimum property rating"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional client-provided context for the search"
          },
          "sort_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort By",
            "description": "Sort criteria",
            "default": "relevance"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "Sort order (asc/desc)",
            "default": "asc"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "location",
          "check_in",
          "check_out"
        ],
        "title": "AccommodationSearchRequest",
        "description": "Request model for accommodation search."
      },
      "AccommodationSearchResponse": {
        "properties": {
          "search_id": {
            "type": "string",
            "title": "Search Id",
            "description": "Search ID"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User that initiated the search"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip identifier"
          },
          "listings": {
            "items": {
              "$ref": "#/components/schemas/AccommodationListing"
            },
            "type": "array",
            "title": "Listings",
            "description": "Search results"
          },
          "search_parameters": {
            "$ref": "#/components/schemas/AccommodationSearchRequest-Output",
            "description": "Original search parameters"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Total number of results"
          },
          "results_returned": {
            "type": "integer",
            "title": "Results Returned",
            "description": "Number of results returned"
          },
          "min_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Price",
            "description": "Minimum price found"
          },
          "max_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Price",
            "description": "Maximum price found"
          },
          "avg_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avg Price",
            "description": "Average price"
          },
          "search_duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Duration Ms",
            "description": "Search duration in milliseconds"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "description": "Whether results were cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "search_id",
          "user_id",
          "listings",
          "search_parameters",
          "total_results",
          "results_returned"
        ],
        "title": "AccommodationSearchResponse",
        "description": "Canonical API response model for accommodation search results.",
        "example": {
          "avg_price": 265.0,
          "cached": false,
          "listings": [
            {
              "currency": "USD",
              "id": "listing-123",
              "max_guests": 2,
              "name": "Central City Loft",
              "price_per_night": 245.0,
              "property_type": "apartment"
            }
          ],
          "max_price": 410.0,
          "min_price": 180.0,
          "results_returned": 10,
          "search_duration_ms": 320,
          "search_id": "search-abc123",
          "search_parameters": {
            "check_in": "2025-08-10",
            "check_out": "2025-08-14",
            "guests": 2,
            "location": "San Francisco"
          },
          "total_results": 42,
          "trip_id": "8c808086-7a9f-4a4a-8212-1c0857f0fa4f",
          "user_id": "user-42"
        }
      },
      "AccommodationType": {
        "type": "string",
        "enum": [
          "hotel",
          "apartment",
          "hostel",
          "resort",
          "villa",
          "house",
          "bed_and_breakfast",
          "guest_house",
          "boutique_hotel",
          "cabin",
          "cottage",
          "other",
          "all"
        ],
        "title": "AccommodationType",
        "description": "Types of accommodations available for booking."
      },
      "ActivityCoordinates": {
        "properties": {
          "lat": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Lat",
            "description": "Latitude"
          },
          "lng": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Lng",
            "description": "Longitude"
          }
        },
        "type": "object",
        "required": [
          "lat",
          "lng"
        ],
        "title": "ActivityCoordinates",
        "description": "Geographic coordinates."
      },
      "ActivityResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Activity ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Activity name"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Activity type (tour, museum, adventure, etc.)"
          },
          "location": {
            "type": "string",
            "title": "Location",
            "description": "Activity location"
          },
          "date": {
            "type": "string",
            "title": "Date",
            "description": "Activity date (ISO format)"
          },
          "duration": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Duration",
            "description": "Duration in minutes"
          },
          "price": {
            "type": "number",
            "minimum": 0.0,
            "title": "Price",
            "description": "Price per person"
          },
          "rating": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 0.0,
            "title": "Rating",
            "description": "Average rating"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Activity description"
          },
          "images": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Images",
            "description": "Activity images"
          },
          "coordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityCoordinates"
              },
              {
                "type": "null"
              }
            ],
            "description": "Geographic coordinates"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider",
            "description": "Activity provider name"
          },
          "availability": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Availability",
            "description": "Availability status"
          },
          "wheelchair_accessible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wheelchair Accessible",
            "description": "Wheelchair accessibility"
          },
          "instant_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instant Confirmation",
            "description": "Instant confirmation available"
          },
          "cancellation_policy": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancellation Policy",
            "description": "Cancellation policy"
          },
          "included": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Included",
            "description": "What's included"
          },
          "excluded": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded",
            "description": "What's not included"
          },
          "meeting_point": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meeting Point",
            "description": "Meeting point details"
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages",
            "description": "Available languages"
          },
          "max_participants": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Participants",
            "description": "Maximum participants"
          },
          "min_participants": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Participants",
            "description": "Minimum participants"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "location",
          "date",
          "duration",
          "price",
          "rating",
          "description"
        ],
        "title": "ActivityResponse",
        "description": "Activity response model (matches legacy API shape)."
      },
      "ActivitySearchRequest": {
        "properties": {
          "destination": {
            "type": "string",
            "title": "Destination"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "adults": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 1.0,
            "title": "Adults",
            "default": 1
          },
          "children": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 0.0,
            "title": "Children",
            "default": 0
          },
          "infants": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Infants",
            "default": 0
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          },
          "duration": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1440.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "price_range": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PriceRange"
              },
              {
                "type": "null"
              }
            ]
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating"
          },
          "wheelchair_accessible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wheelchair Accessible"
          },
          "instant_confirmation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instant Confirmation"
          },
          "free_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Free Cancellation"
          }
        },
        "type": "object",
        "required": [
          "destination",
          "start_date"
        ],
        "title": "ActivitySearchRequest",
        "description": "Activity search request parameters."
      },
      "ActivitySearchResponse": {
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/ActivityResponse"
            },
            "type": "array",
            "title": "Activities"
          },
          "total": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total",
            "default": 0
          },
          "skip": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Skip",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Limit",
            "default": 20
          },
          "filters_applied": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters Applied"
          },
          "search_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Id"
          },
          "cached": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cached"
          },
          "provider_responses": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Responses"
          }
        },
        "type": "object",
        "title": "ActivitySearchResponse",
        "description": "Aggregate search results with metadata."
      },
      "AgentConfigRequest": {
        "properties": {
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2.0,
                "minimum": 0.0,
                "description": "Controls randomness in responses (0.0=deterministic, 2.0=very creative)"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 8000.0,
                "minimum": 1.0,
                "description": "Maximum tokens in response (affects cost and response length)"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens"
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0,
                "description": "Nucleus sampling parameter (0.1=focused, 1.0=diverse)"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P"
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300.0,
                "minimum": 5.0,
                "description": "Request timeout in seconds"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds"
          },
          "model": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(gpt-4|gpt-4-turbo|gpt-4o|gpt-4o-mini|gpt-3.5-turbo|claude-3-sonnet|claude-3-haiku)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model",
            "description": "AI model to use for this agent"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of configuration changes"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "AgentConfigRequest",
        "description": "Request schema for agent configuration updates with advanced validation."
      },
      "AgentConfigResponse": {
        "properties": {
          "agent_type": {
            "$ref": "#/components/schemas/AgentType"
          },
          "temperature": {
            "type": "number",
            "maximum": 2.0,
            "minimum": 0.0,
            "title": "Temperature"
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 8000.0,
            "minimum": 1.0,
            "title": "Max Tokens"
          },
          "top_p": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Top P"
          },
          "timeout_seconds": {
            "type": "integer",
            "maximum": 300.0,
            "minimum": 5.0,
            "title": "Timeout Seconds"
          },
          "model": {
            "type": "string",
            "pattern": "^(gpt-4|gpt-4-turbo|gpt-4o|gpt-4o-mini|gpt-3.5-turbo|claude-3-sonnet|claude-3-haiku)$",
            "title": "Model"
          },
          "scope": {
            "$ref": "#/components/schemas/ConfigurationScope"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "estimated_cost_per_1k_tokens": {
            "type": "string",
            "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$",
            "title": "Estimated Cost Per 1K Tokens",
            "description": "Calculate estimated cost per 1000 tokens for this configuration.",
            "readOnly": true
          },
          "creativity_level": {
            "type": "string",
            "title": "Creativity Level",
            "description": "Categorize the creativity level based on temperature.",
            "readOnly": true
          },
          "response_size_category": {
            "type": "string",
            "title": "Response Size Category",
            "description": "Categorize response size based on max_tokens.",
            "readOnly": true
          },
          "performance_tier": {
            "type": "string",
            "title": "Performance Tier",
            "description": "Determine performance tier based on model and settings.",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "agent_type",
          "temperature",
          "max_tokens",
          "top_p",
          "timeout_seconds",
          "model",
          "scope",
          "estimated_cost_per_1k_tokens",
          "creativity_level",
          "response_size_category",
          "performance_tier"
        ],
        "title": "AgentConfigResponse",
        "description": "Response schema for agent configuration with computed metrics."
      },
      "AgentType": {
        "type": "string",
        "enum": [
          "budget_agent",
          "destination_research_agent",
          "itinerary_agent"
        ],
        "title": "AgentType",
        "description": "Enumeration of available agent types with metadata."
      },
      "AlertInfoResponse": {
        "properties": {
          "alert_id": {
            "type": "string",
            "title": "Alert Id",
            "description": "Unique alert ID"
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverity",
            "description": "Alert severity"
          },
          "alert_type": {
            "$ref": "#/components/schemas/AlertType",
            "description": "Type of alert"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Alert message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Alert creation time"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Alert last update time"
          },
          "key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key Id",
            "description": "Related API key ID"
          },
          "service": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service",
            "description": "Related service"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Related user ID"
          },
          "endpoint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endpoint",
            "description": "Related endpoint"
          },
          "acknowledged": {
            "type": "boolean",
            "title": "Acknowledged",
            "description": "Whether alert is acknowledged",
            "default": false
          },
          "acknowledged_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acknowledged By",
            "description": "User who acknowledged"
          },
          "acknowledged_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acknowledged At",
            "description": "Acknowledgment time"
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details",
            "description": "Additional alert details"
          },
          "resolution_steps": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Resolution Steps",
            "description": "Suggested resolution steps"
          }
        },
        "type": "object",
        "required": [
          "alert_id",
          "severity",
          "alert_type",
          "message",
          "created_at"
        ],
        "title": "AlertInfoResponse",
        "description": "Alert information response."
      },
      "AlertSeverity": {
        "type": "string",
        "enum": [
          "low",
          "medium",
          "high",
          "critical"
        ],
        "title": "AlertSeverity",
        "description": "Alert severity levels."
      },
      "AlertType": {
        "type": "string",
        "enum": [
          "spike",
          "drop",
          "error_rate",
          "latency",
          "pattern",
          "security",
          "rate_limit"
        ],
        "title": "AlertType",
        "description": "Types of alerts."
      },
      "ApiKeyCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "service": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Service"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "service",
          "key"
        ],
        "title": "ApiKeyCreate",
        "description": "API key creation request model."
      },
      "ApiKeyResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "service": {
            "type": "string",
            "title": "Service"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "is_valid": {
            "type": "boolean",
            "title": "Is Valid",
            "default": true
          },
          "last_used": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "service",
          "created_at",
          "updated_at"
        ],
        "title": "ApiKeyResponse",
        "description": "API key response model."
      },
      "ApiKeyRotateRequest": {
        "properties": {
          "new_key": {
            "type": "string",
            "title": "New Key"
          }
        },
        "type": "object",
        "required": [
          "new_key"
        ],
        "title": "ApiKeyRotateRequest",
        "description": "API key rotation request model."
      },
      "ApiKeyValidateRequest": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "service": {
            "type": "string",
            "title": "Service"
          }
        },
        "type": "object",
        "required": [
          "key",
          "service"
        ],
        "title": "ApiKeyValidateRequest",
        "description": "API key validation request model."
      },
      "ApiKeyValidateResponse": {
        "properties": {
          "is_valid": {
            "type": "boolean",
            "title": "Is Valid"
          },
          "service": {
            "type": "string",
            "title": "Service"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "is_valid",
          "service",
          "message"
        ],
        "title": "ApiKeyValidateResponse",
        "description": "API key validation response model."
      },
      "BatchUploadResponse": {
        "properties": {
          "files": {
            "items": {
              "$ref": "#/components/schemas/FileUploadResponse"
            },
            "type": "array",
            "title": "Files",
            "description": "Processed files"
          },
          "total_files": {
            "type": "integer",
            "title": "Total Files",
            "description": "Total files processed"
          },
          "total_size": {
            "type": "integer",
            "title": "Total Size",
            "description": "Total size in bytes"
          }
        },
        "type": "object",
        "required": [
          "files",
          "total_files",
          "total_size"
        ],
        "title": "BatchUploadResponse",
        "description": "Response for a batch file upload operation."
      },
      "Body_upload_file_api_attachments_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file_api_attachments_upload_post"
      },
      "Body_upload_files_batch_api_attachments_upload_batch_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_upload_files_batch_api_attachments_upload_batch_post"
      },
      "Budget-Input": {
        "properties": {
          "total_budget": {
            "$ref": "#/components/schemas/Price-Input",
            "description": "Total budget amount"
          },
          "allocated": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Allocated amount"
          },
          "spent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Spent amount"
          },
          "remaining": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Remaining amount"
          },
          "categories": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Price-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "description": "Budget by category"
          }
        },
        "type": "object",
        "required": [
          "total_budget"
        ],
        "title": "Budget",
        "description": "Budget allocation and tracking."
      },
      "Budget-Output": {
        "properties": {
          "total_budget": {
            "$ref": "#/components/schemas/Price-Output",
            "description": "Total budget amount"
          },
          "allocated": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Allocated amount"
          },
          "spent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Spent amount"
          },
          "remaining": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Price-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Remaining amount"
          },
          "categories": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Price-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "description": "Budget by category"
          }
        },
        "type": "object",
        "required": [
          "total_budget"
        ],
        "title": "Budget",
        "description": "Budget allocation and tracking."
      },
      "CabinClass": {
        "type": "string",
        "enum": [
          "economy",
          "premium_economy",
          "business",
          "first"
        ],
        "title": "CabinClass",
        "description": "Flight cabin classes."
      },
      "CancellationPolicy": {
        "type": "string",
        "enum": [
          "flexible",
          "moderate",
          "strict",
          "super_strict",
          "free_cancellation",
          "no_refund"
        ],
        "title": "CancellationPolicy",
        "description": "Cancellation policy enumeration."
      },
      "ChatMessage": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/MessageRole",
            "description": "Message role (user/assistant/system)"
          },
          "content": {
            "type": "string",
            "maxLength": 32768,
            "title": "Content",
            "description": "Message content"
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ToolCall"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls",
            "description": "Tool calls made"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp",
            "description": "Message timestamp"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Message metadata"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "ChatMessage",
        "description": "Common model for chat messages."
      },
      "ChatRequest": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            },
            "type": "array",
            "title": "Messages",
            "description": "Chat messages"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "Session ID for context"
          },
          "stream": {
            "type": "boolean",
            "title": "Stream",
            "description": "Whether to stream the response",
            "default": true
          },
          "save_history": {
            "type": "boolean",
            "title": "Save History",
            "description": "Whether to save chat history",
            "default": true
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "description": "Model temperature"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4096.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "Maximum tokens to generate"
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools",
            "description": "Specific tools to enable for this request"
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "ChatRequest",
        "description": "Chat API request."
      },
      "ChatResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Response ID"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "Session ID"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Response content"
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ToolCall"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls",
            "description": "Tool calls made"
          },
          "finish_reason": {
            "type": "string",
            "title": "Finish Reason",
            "description": "Finish reason",
            "default": "stop"
          },
          "usage": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage",
            "description": "Token usage information"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Response timestamp"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "ChatResponse",
        "description": "Chat API response for non-streaming requests."
      },
      "ClimateType": {
        "type": "string",
        "enum": [
          "tropical",
          "subtropical",
          "temperate",
          "continental",
          "arid",
          "mediterranean",
          "arctic",
          "alpine"
        ],
        "title": "ClimateType",
        "description": "Climate type enumeration."
      },
      "ConfigurationScope": {
        "type": "string",
        "enum": [
          "global",
          "environment",
          "agent_specific",
          "user_override"
        ],
        "title": "ConfigurationScope",
        "description": "Enumeration of configuration scopes."
      },
      "ConfigurationVersion-Input": {
        "properties": {
          "version_id": {
            "type": "string",
            "maxLength": 20,
            "minLength": 10,
            "pattern": "^v\\d+_[a-f0-9]{8}$",
            "title": "Version Id",
            "description": "Unique version identifier"
          },
          "agent_type": {
            "$ref": "#/components/schemas/AgentType"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "description": "Configuration snapshot"
          },
          "scope": {
            "$ref": "#/components/schemas/ConfigurationScope"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current",
            "default": false
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "version_id",
          "agent_type",
          "configuration",
          "scope",
          "created_by"
        ],
        "title": "ConfigurationVersion",
        "description": "Schema for configuration version history with enhanced metadata."
      },
      "ConfigurationVersion-Output": {
        "properties": {
          "version_id": {
            "type": "string",
            "maxLength": 20,
            "minLength": 10,
            "pattern": "^v\\d+_[a-f0-9]{8}$",
            "title": "Version Id",
            "description": "Unique version identifier"
          },
          "agent_type": {
            "$ref": "#/components/schemas/AgentType"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration",
            "description": "Configuration snapshot"
          },
          "scope": {
            "$ref": "#/components/schemas/ConfigurationScope"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_current": {
            "type": "boolean",
            "title": "Is Current",
            "default": false
          },
          "age_in_days": {
            "type": "integer",
            "title": "Age In Days",
            "description": "Calculate age of this version in days.",
            "readOnly": true
          },
          "is_recent": {
            "type": "boolean",
            "title": "Is Recent",
            "description": "Check if this version was created recently (within 7 days).",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "version_id",
          "agent_type",
          "configuration",
          "scope",
          "created_by",
          "age_in_days",
          "is_recent"
        ],
        "title": "ConfigurationVersion",
        "description": "Schema for configuration version history with enhanced metadata."
      },
      "ConversationMemoryRequest": {
        "properties": {
          "messages": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Messages",
            "description": "Conversation messages"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "Session ID"
          },
          "context_type": {
            "type": "string",
            "title": "Context Type",
            "description": "Context type",
            "default": "travel_planning"
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "ConversationMemoryRequest",
        "description": "Request payload for adding conversation memory."
      },
      "Coordinates": {
        "properties": {
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Latitude in decimal degrees"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Longitude in decimal degrees"
          },
          "altitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Altitude",
            "description": "Altitude in meters"
          }
        },
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "title": "Coordinates",
        "description": "Geographic coordinates."
      },
      "CreateMessageRequest": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Message content"
          },
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Message role",
            "default": "user"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "CreateMessageRequest",
        "description": "Request model for creating a message in a session."
      },
      "CreateTripRequest": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Title",
            "description": "Trip title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Trip description"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Trip start date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date",
            "description": "Trip end date"
          },
          "destinations": {
            "items": {
              "$ref": "#/components/schemas/TripDestination"
            },
            "type": "array",
            "minItems": 1,
            "title": "Destinations",
            "description": "Trip destinations"
          },
          "preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TripPreferences-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Trip preferences"
          }
        },
        "type": "object",
        "required": [
          "title",
          "start_date",
          "end_date",
          "destinations"
        ],
        "title": "CreateTripRequest",
        "description": "Request model for creating a trip.",
        "example": {
          "description": "Ten-day cultural tour",
          "destinations": [
            {
              "city": "Paris",
              "country": "France",
              "name": "Paris"
            },
            {
              "city": "Rome",
              "country": "Italy",
              "name": "Rome"
            }
          ],
          "end_date": "2025-06-10",
          "start_date": "2025-06-01",
          "title": "European Highlights"
        }
      },
      "CurrencyCode": {
        "type": "string",
        "enum": [
          "USD",
          "EUR",
          "GBP",
          "JPY",
          "CAD",
          "AUD",
          "CHF",
          "CNY",
          "SEK",
          "NZD",
          "NOK",
          "DKK",
          "PLN",
          "CZK",
          "HUF",
          "RUB",
          "BRL",
          "INR",
          "KRW",
          "SGD",
          "HKD",
          "MXN",
          "ZAR",
          "TRY",
          "THB"
        ],
        "title": "CurrencyCode",
        "description": "ISO 4217 currency codes for the most common currencies."
      },
      "DeleteFileResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "file_id": {
            "type": "string",
            "title": "File Id"
          }
        },
        "type": "object",
        "required": [
          "message",
          "file_id"
        ],
        "title": "DeleteFileResponse",
        "description": "Confirmation for a deletion request."
      },
      "Destination-Input": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Destination ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Destination name"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Country"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "Region/state/province"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Brief description"
          },
          "long_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Long Description",
            "description": "Detailed description"
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/DestinationCategory"
            },
            "type": "array",
            "title": "Categories",
            "description": "Destination categories"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Latitude coordinate"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Longitude coordinate"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Local currency code"
          },
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Languages",
            "description": "Primary languages"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/DestinationImage"
            },
            "type": "array",
            "title": "Images",
            "description": "Destination images"
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating",
            "description": "Overall rating"
          },
          "review_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Count",
            "description": "Number of reviews"
          },
          "safety_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Rating",
            "description": "Safety rating"
          },
          "visa_requirements": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visa Requirements",
            "description": "Visa requirements"
          },
          "local_transportation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local Transportation",
            "description": "Local transportation options"
          },
          "popular_activities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Popular Activities",
            "description": "Popular activities"
          },
          "points_of_interest": {
            "items": {
              "$ref": "#/components/schemas/PointOfInterest"
            },
            "type": "array",
            "title": "Points Of Interest",
            "description": "POIs"
          },
          "weather": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DestinationWeather"
              },
              {
                "type": "null"
              }
            ],
            "description": "Weather information"
          },
          "best_time_to_visit": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Best Time To Visit",
            "description": "Best months to visit"
          },
          "travel_advisory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TravelAdvisory"
              },
              {
                "type": "null"
              }
            ],
            "description": "Travel advisory"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Data source"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated",
            "description": "Last updated timestamp"
          },
          "relevance_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Relevance Score",
            "description": "Search relevance score"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "country"
        ],
        "title": "Destination",
        "description": "Comprehensive destination information."
      },
      "Destination-Output": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Destination ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Destination name"
          },
          "country": {
            "type": "string",
            "title": "Country",
            "description": "Country"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "Region/state/province"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Brief description"
          },
          "long_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Long Description",
            "description": "Detailed description"
          },
          "categories": {
            "items": {
              "$ref": "#/components/schemas/DestinationCategory"
            },
            "type": "array",
            "title": "Categories",
            "description": "Destination categories"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Latitude coordinate"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Longitude coordinate"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Local currency code"
          },
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Languages",
            "description": "Primary languages"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/DestinationImage"
            },
            "type": "array",
            "title": "Images",
            "description": "Destination images"
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating",
            "description": "Overall rating"
          },
          "review_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Count",
            "description": "Number of reviews"
          },
          "safety_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Rating",
            "description": "Safety rating"
          },
          "visa_requirements": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visa Requirements",
            "description": "Visa requirements"
          },
          "local_transportation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local Transportation",
            "description": "Local transportation options"
          },
          "popular_activities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Popular Activities",
            "description": "Popular activities"
          },
          "points_of_interest": {
            "items": {
              "$ref": "#/components/schemas/PointOfInterest"
            },
            "type": "array",
            "title": "Points Of Interest",
            "description": "POIs"
          },
          "weather": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DestinationWeather"
              },
              {
                "type": "null"
              }
            ],
            "description": "Weather information"
          },
          "best_time_to_visit": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Best Time To Visit",
            "description": "Best months to visit"
          },
          "travel_advisory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TravelAdvisory"
              },
              {
                "type": "null"
              }
            ],
            "description": "Travel advisory"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Data source"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated",
            "description": "Last updated timestamp"
          },
          "relevance_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Relevance Score",
            "description": "Search relevance score"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "country"
        ],
        "title": "Destination",
        "description": "Comprehensive destination information."
      },
      "DestinationCategory": {
        "type": "string",
        "enum": [
          "city",
          "beach",
          "mountain",
          "countryside",
          "historical",
          "cultural",
          "adventure",
          "relaxation",
          "food_and_wine",
          "wildlife",
          "business",
          "other"
        ],
        "title": "DestinationCategory",
        "description": "Destination category enumeration."
      },
      "DestinationImage": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "Image URL"
          },
          "caption": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Caption",
            "description": "Image caption"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "description": "Whether this is the primary image",
            "default": false
          },
          "attribution": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attribution",
            "description": "Image attribution/source"
          },
          "width": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width",
            "description": "Image width in pixels"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height",
            "description": "Image height in pixels"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "DestinationImage",
        "description": "Destination image information."
      },
      "DestinationRecommendation-Input": {
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/Destination-Input",
            "description": "Recommended destination"
          },
          "match_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Match Score",
            "description": "Recommendation match score"
          },
          "reasons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Reasons",
            "description": "Reasons for recommendation"
          },
          "best_for": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Best For",
            "description": "What this destination is best for"
          },
          "estimated_cost": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Cost",
            "description": "Estimated costs"
          }
        },
        "type": "object",
        "required": [
          "destination",
          "match_score",
          "reasons"
        ],
        "title": "DestinationRecommendation",
        "description": "Destination recommendation with reasoning."
      },
      "DestinationRecommendation-Output": {
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/Destination-Output",
            "description": "Recommended destination"
          },
          "match_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Match Score",
            "description": "Recommendation match score"
          },
          "reasons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Reasons",
            "description": "Reasons for recommendation"
          },
          "best_for": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Best For",
            "description": "What this destination is best for"
          },
          "estimated_cost": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Cost",
            "description": "Estimated costs"
          }
        },
        "type": "object",
        "required": [
          "destination",
          "match_score",
          "reasons"
        ],
        "title": "DestinationRecommendation",
        "description": "Destination recommendation with reasoning."
      },
      "DestinationRecommendationRequest": {
        "properties": {
          "user_interests": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "User Interests",
            "description": "User interests"
          },
          "travel_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Style",
            "description": "Travel style preference"
          },
          "budget_range": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget Range",
            "description": "Budget range in USD"
          },
          "travel_dates": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "date"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Dates",
            "description": "Potential travel dates"
          },
          "trip_duration_days": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Duration Days",
            "description": "Trip duration"
          },
          "group_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Size",
            "description": "Travel group size"
          },
          "accessibility_needs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accessibility Needs",
            "description": "Accessibility requirements"
          },
          "previous_destinations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Destinations",
            "description": "Previously visited destinations"
          },
          "limit": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum recommendations",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "user_interests"
        ],
        "title": "DestinationRecommendationRequest",
        "description": "Request model for destination recommendations."
      },
      "DestinationSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "title": "Query",
            "description": "Search query"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DestinationCategory"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories",
            "description": "Preferred categories"
          },
          "min_safety_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Safety Rating",
            "description": "Minimum safety rating"
          },
          "max_safety_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Safety Rating",
            "description": "Maximum safety rating"
          },
          "travel_month": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Travel Month",
            "description": "Month of travel for weather filtering"
          },
          "budget_range": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget Range",
            "description": "Budget range in USD"
          },
          "continent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Continent",
            "description": "Preferred continent"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Preferred country"
          },
          "climate_preference": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClimateType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Preferred climate type"
          },
          "limit": {
            "type": "integer",
            "maximum": 50.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum number of results",
            "default": 10
          },
          "include_weather": {
            "type": "boolean",
            "title": "Include Weather",
            "description": "Include weather information",
            "default": true
          },
          "include_pois": {
            "type": "boolean",
            "title": "Include Pois",
            "description": "Include points of interest",
            "default": true
          },
          "include_advisory": {
            "type": "boolean",
            "title": "Include Advisory",
            "description": "Include travel advisory",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "DestinationSearchRequest",
        "description": "Request model for destination search."
      },
      "DestinationSearchResponse": {
        "properties": {
          "search_id": {
            "type": "string",
            "title": "Search Id",
            "description": "Search ID"
          },
          "destinations": {
            "items": {
              "$ref": "#/components/schemas/Destination-Output"
            },
            "type": "array",
            "title": "Destinations",
            "description": "Search results"
          },
          "search_parameters": {
            "$ref": "#/components/schemas/DestinationSearchRequest",
            "description": "Original search parameters"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Total number of results"
          },
          "results_returned": {
            "type": "integer",
            "title": "Results Returned",
            "description": "Number of results returned"
          },
          "search_duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Duration Ms",
            "description": "Search duration in milliseconds"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "description": "Whether results were cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "search_id",
          "destinations",
          "search_parameters",
          "total_results",
          "results_returned"
        ],
        "title": "DestinationSearchResponse",
        "description": "Destination search response model."
      },
      "DestinationWeather": {
        "properties": {
          "season": {
            "type": "string",
            "title": "Season",
            "description": "Current season"
          },
          "temperature_high_c": {
            "type": "number",
            "title": "Temperature High C",
            "description": "Average high temperature in Celsius"
          },
          "temperature_low_c": {
            "type": "number",
            "title": "Temperature Low C",
            "description": "Average low temperature in Celsius"
          },
          "temperature_high_f": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature High F",
            "description": "Average high temperature in Fahrenheit"
          },
          "temperature_low_f": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature Low F",
            "description": "Average low temperature in Fahrenheit"
          },
          "precipitation_mm": {
            "type": "number",
            "title": "Precipitation Mm",
            "description": "Average precipitation in mm"
          },
          "humidity_percent": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Humidity Percent",
            "description": "Average humidity percentage"
          },
          "conditions": {
            "type": "string",
            "title": "Conditions",
            "description": "Typical weather conditions"
          },
          "climate_type": {
            "$ref": "#/components/schemas/ClimateType",
            "description": "Climate classification"
          },
          "best_months": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Best Months",
            "description": "Best months to visit"
          },
          "avoid_months": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Avoid Months",
            "description": "Months to avoid"
          }
        },
        "type": "object",
        "required": [
          "season",
          "temperature_high_c",
          "temperature_low_c",
          "precipitation_mm",
          "humidity_percent",
          "conditions",
          "climate_type"
        ],
        "title": "DestinationWeather",
        "description": "Destination weather information."
      },
      "FileListResponse": {
        "properties": {
          "files": {
            "items": {
              "$ref": "#/components/schemas/FileMetadataResponse"
            },
            "type": "array",
            "title": "Files"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "files",
          "limit",
          "offset",
          "total"
        ],
        "title": "FileListResponse",
        "description": "Paginated list of file metadata."
      },
      "FileMetadataResponse": {
        "properties": {
          "file_id": {
            "type": "string",
            "title": "File Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type"
          },
          "processing_status": {
            "type": "string",
            "title": "Processing Status"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "analysis_summary": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis Summary"
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "filename",
          "file_size",
          "mime_type",
          "processing_status"
        ],
        "title": "FileMetadataResponse",
        "description": "Metadata for an uploaded file."
      },
      "FileUploadResponse": {
        "properties": {
          "file_id": {
            "type": "string",
            "title": "File Id",
            "description": "Unique file identifier"
          },
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Original filename"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "description": "File size in bytes"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "MIME type"
          },
          "processing_status": {
            "type": "string",
            "title": "Processing Status",
            "description": "Processing status"
          },
          "upload_status": {
            "type": "string",
            "title": "Upload Status",
            "description": "Upload status"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Status message",
            "default": "Upload successful"
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "filename",
          "file_size",
          "mime_type",
          "processing_status",
          "upload_status"
        ],
        "title": "FileUploadResponse",
        "description": "Response after a single file upload."
      },
      "FlightBooking": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Booking ID"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip ID"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "offer_id": {
            "type": "string",
            "title": "Offer Id",
            "description": "Booked offer ID"
          },
          "confirmation_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirmation Number",
            "description": "Airline confirmation number"
          },
          "passengers": {
            "items": {
              "$ref": "#/components/schemas/FlightPassenger"
            },
            "type": "array",
            "title": "Passengers",
            "description": "Passenger details"
          },
          "outbound_segments": {
            "items": {
              "$ref": "#/components/schemas/FlightSegment"
            },
            "type": "array",
            "title": "Outbound Segments",
            "description": "Outbound segments"
          },
          "return_segments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FlightSegment"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Segments",
            "description": "Return segments"
          },
          "total_price": {
            "type": "number",
            "title": "Total Price",
            "description": "Total booking price"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Price currency"
          },
          "status": {
            "$ref": "#/components/schemas/tripsage_core__models__schemas_common__enums__BookingStatus",
            "description": "Booking status"
          },
          "booked_at": {
            "type": "string",
            "format": "date-time",
            "title": "Booked At",
            "description": "Booking timestamp"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Booking expiration"
          },
          "cancellable": {
            "type": "boolean",
            "title": "Cancellable",
            "description": "Whether booking can be cancelled",
            "default": false
          },
          "refundable": {
            "type": "boolean",
            "title": "Refundable",
            "description": "Whether booking is refundable",
            "default": false
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Additional metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "offer_id",
          "passengers",
          "outbound_segments",
          "total_price",
          "currency",
          "status",
          "booked_at"
        ],
        "title": "FlightBooking",
        "description": "Flight booking response model."
      },
      "FlightBookingRequest": {
        "properties": {
          "offer_id": {
            "type": "string",
            "title": "Offer Id",
            "description": "Offer ID to book"
          },
          "passengers": {
            "items": {
              "$ref": "#/components/schemas/FlightPassenger"
            },
            "type": "array",
            "title": "Passengers",
            "description": "Complete passenger information"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip ID"
          },
          "hold_only": {
            "type": "boolean",
            "title": "Hold Only",
            "description": "Hold booking without payment",
            "default": false
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional booking metadata"
          }
        },
        "type": "object",
        "required": [
          "offer_id",
          "passengers"
        ],
        "title": "FlightBookingRequest",
        "description": "Request model for flight booking."
      },
      "FlightOffer": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Offer ID"
          },
          "search_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Id",
            "description": "Associated search ID"
          },
          "outbound_segments": {
            "items": {
              "$ref": "#/components/schemas/FlightSegment"
            },
            "type": "array",
            "title": "Outbound Segments",
            "description": "Outbound flight segments"
          },
          "return_segments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FlightSegment"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Segments",
            "description": "Return flight segments"
          },
          "total_price": {
            "type": "number",
            "title": "Total Price",
            "description": "Total price"
          },
          "base_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Price",
            "description": "Base fare price"
          },
          "taxes": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taxes",
            "description": "Taxes and fees"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Price currency"
          },
          "cabin_class": {
            "$ref": "#/components/schemas/CabinClass",
            "description": "Cabin class"
          },
          "booking_class": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Class",
            "description": "Booking class code"
          },
          "total_duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Duration",
            "description": "Total travel time in minutes"
          },
          "stops_count": {
            "type": "integer",
            "title": "Stops Count",
            "description": "Number of stops",
            "default": 0
          },
          "airlines": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Airlines",
            "description": "Airlines involved"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Offer expiration time"
          },
          "bookable": {
            "type": "boolean",
            "title": "Bookable",
            "description": "Whether offer can be booked",
            "default": true
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "Source API (duffel, amadeus, etc.)"
          },
          "source_offer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Offer Id",
            "description": "Original offer ID from source"
          },
          "score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Score",
            "description": "Quality score"
          },
          "price_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Score",
            "description": "Price competitiveness"
          },
          "convenience_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Convenience Score",
            "description": "Convenience score"
          }
        },
        "type": "object",
        "required": [
          "id",
          "outbound_segments",
          "total_price",
          "currency",
          "cabin_class"
        ],
        "title": "FlightOffer",
        "description": "Flight offer response model."
      },
      "FlightPassenger": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PassengerType",
            "description": "Passenger type"
          },
          "age": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 120.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Age",
            "description": "Passenger age"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name",
            "description": "First name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name",
            "description": "Last name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title (Mr, Ms, etc.)"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth",
            "description": "Date of birth"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Phone number"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "FlightPassenger",
        "description": "Passenger information for flight bookings."
      },
      "FlightSearchRequest": {
        "properties": {
          "origin": {
            "type": "string",
            "title": "Origin",
            "description": "Origin airport IATA code"
          },
          "destination": {
            "type": "string",
            "title": "Destination",
            "description": "Destination airport IATA code"
          },
          "departure_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ],
            "title": "Departure Date",
            "description": "Departure date"
          },
          "return_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Date",
            "description": "Return date for round trips"
          },
          "adults": {
            "type": "integer",
            "maximum": 9.0,
            "minimum": 1.0,
            "title": "Adults",
            "description": "Number of adult passengers",
            "default": 1
          },
          "children": {
            "type": "integer",
            "maximum": 9.0,
            "minimum": 0.0,
            "title": "Children",
            "description": "Number of child passengers",
            "default": 0
          },
          "infants": {
            "type": "integer",
            "maximum": 4.0,
            "minimum": 0.0,
            "title": "Infants",
            "description": "Number of infant passengers",
            "default": 0
          },
          "passengers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FlightPassenger"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Passengers",
            "description": "Detailed passenger information (optional)"
          },
          "cabin_class": {
            "$ref": "#/components/schemas/CabinClass",
            "description": "Cabin class",
            "default": "economy"
          },
          "max_stops": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Stops",
            "description": "Maximum number of stops"
          },
          "max_price": {
            "anyOf": [
              {
                "type": "number",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Price",
            "description": "Maximum price in USD"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Price currency",
            "default": "USD"
          },
          "flexible_dates": {
            "type": "boolean",
            "title": "Flexible Dates",
            "description": "Allow flexible date search",
            "default": false
          },
          "preferred_airlines": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferred Airlines",
            "description": "Preferred airline codes"
          },
          "excluded_airlines": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Excluded Airlines",
            "description": "Excluded airline codes"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip ID"
          }
        },
        "type": "object",
        "required": [
          "origin",
          "destination",
          "departure_date"
        ],
        "title": "FlightSearchRequest",
        "description": "Unified flight search request model.\n\nThis model combines the API and service layer requirements for flight searches.\nIt supports both simple passenger counts and detailed passenger information."
      },
      "FlightSearchResponse": {
        "properties": {
          "search_id": {
            "type": "string",
            "title": "Search Id",
            "description": "Search ID"
          },
          "offers": {
            "items": {
              "$ref": "#/components/schemas/FlightOffer"
            },
            "type": "array",
            "title": "Offers",
            "description": "Flight offers"
          },
          "search_parameters": {
            "title": "Search Parameters",
            "description": "Original search parameters"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Total number of results"
          },
          "search_duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Duration Ms",
            "description": "Search duration in milliseconds"
          },
          "cached": {
            "type": "boolean",
            "title": "Cached",
            "description": "Whether results were cached",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "search_id",
          "offers",
          "search_parameters",
          "total_results"
        ],
        "title": "FlightSearchResponse",
        "description": "Flight search response model."
      },
      "FlightSegment": {
        "properties": {
          "origin": {
            "type": "string",
            "title": "Origin",
            "description": "Origin airport code"
          },
          "destination": {
            "type": "string",
            "title": "Destination",
            "description": "Destination airport code"
          },
          "departure_date": {
            "type": "string",
            "format": "date-time",
            "title": "Departure Date",
            "description": "Departure date and time"
          },
          "arrival_date": {
            "type": "string",
            "format": "date-time",
            "title": "Arrival Date",
            "description": "Arrival date and time"
          },
          "airline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Airline",
            "description": "Airline code"
          },
          "flight_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Flight Number",
            "description": "Flight number"
          },
          "aircraft_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aircraft Type",
            "description": "Aircraft type"
          },
          "duration_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Minutes",
            "description": "Flight duration in minutes"
          }
        },
        "type": "object",
        "required": [
          "origin",
          "destination",
          "departure_date",
          "arrival_date"
        ],
        "title": "FlightSegment",
        "description": "Flight segment information."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ItineraryConflictCheckResponse": {
        "properties": {
          "has_conflicts": {
            "type": "boolean",
            "title": "Has Conflicts",
            "description": "Whether there are any conflicts"
          },
          "conflicts": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Conflicts",
            "description": "List of conflicts found"
          }
        },
        "type": "object",
        "required": [
          "has_conflicts"
        ],
        "title": "ItineraryConflictCheckResponse",
        "description": "Response model for checking conflicting items in an itinerary."
      },
      "ItineraryCreateRequest": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Title",
            "description": "Title of the itinerary"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the itinerary"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Start date of the itinerary"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date",
            "description": "End date of the itinerary"
          },
          "destinations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Destinations",
            "description": "List of destination IDs to include in this itinerary"
          },
          "total_budget": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Budget",
            "description": "Total budget for the trip"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency code for budget amounts (e.g., 'USD')"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "List of tags to associate with this itinerary"
          }
        },
        "type": "object",
        "required": [
          "title",
          "start_date",
          "end_date"
        ],
        "title": "ItineraryCreateRequest",
        "description": "Request model for creating a new itinerary.",
        "example": {
          "currency": "USD",
          "description": "5-day itinerary across Tokyo",
          "destinations": [
            "Tokyo"
          ],
          "end_date": "2025-05-05",
          "start_date": "2025-05-01",
          "tags": [
            "culture",
            "food"
          ],
          "title": "Tokyo Adventure",
          "total_budget": 4500.0
        }
      },
      "ItineraryItemCreateRequest": {
        "properties": {
          "item_type": {
            "$ref": "#/components/schemas/ItineraryItemType",
            "description": "Type of itinerary item"
          },
          "title": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Title",
            "description": "Title or name of the item"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item"
          },
          "item_date": {
            "type": "string",
            "format": "date",
            "title": "Item Date",
            "description": "Date of the itinerary item"
          },
          "time_slot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimeSlot"
              },
              {
                "type": "null"
              }
            ],
            "description": "Time slot for the item, if applicable"
          },
          "location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Location"
              },
              {
                "type": "null"
              }
            ],
            "description": "Location of the item, if applicable"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost",
            "description": "Cost of the item in the trip's currency"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency code for the cost (e.g., 'USD')"
          },
          "booking_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Reference",
            "description": "Booking reference or confirmation number"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes about the item"
          },
          "is_flexible": {
            "type": "boolean",
            "title": "Is Flexible",
            "description": "Whether this item's time is flexible",
            "default": false
          },
          "flight_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Flight Details",
            "description": "Flight-specific details if type is TRANSPORT"
          },
          "accommodation_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation Details",
            "description": "Accommodation-specific details if type is ACCOMMODATION"
          },
          "activity_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Details",
            "description": "Activity-specific details if type is ACTIVITY"
          },
          "transportation_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transportation Details",
            "description": "Transportation-specific details if type is TRANSPORT"
          }
        },
        "type": "object",
        "required": [
          "item_type",
          "title",
          "item_date"
        ],
        "title": "ItineraryItemCreateRequest",
        "description": "Request model for adding an item to an itinerary.",
        "example": {
          "cost": 100.0,
          "currency": "USD",
          "description": "Iconic landmark with city views",
          "item_date": "2025-05-02",
          "item_type": "activity",
          "time_slot": {
            "end_time": "12:00",
            "start_time": "10:00"
          },
          "title": "Visit Tokyo Tower"
        }
      },
      "ItineraryItemResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier for the itinerary item"
          },
          "item_type": {
            "type": "string",
            "title": "Item Type",
            "description": "Type of itinerary item"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Title or name of the item"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item"
          },
          "item_date": {
            "type": "string",
            "format": "date",
            "title": "Item Date",
            "description": "Date of the itinerary item"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time",
            "description": "Start time (HH:MM) for the itinerary item"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time",
            "description": "End time (HH:MM) for the itinerary item"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost",
            "description": "Cost of the item"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency code for the cost"
          },
          "booking_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Reference",
            "description": "Booking reference"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes"
          },
          "is_flexible": {
            "type": "boolean",
            "title": "Is Flexible",
            "description": "Whether item time is flexible",
            "default": false
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "item_type",
          "title",
          "item_date"
        ],
        "title": "ItineraryItemResponse",
        "description": "Response model for itinerary item.",
        "example": {
          "booking_reference": "ABC123",
          "cost": 100.0,
          "created_at": "2025-04-01T09:00:00Z",
          "currency": "USD",
          "description": "Iconic landmark with city views",
          "end_time": "12:00",
          "id": "item-123",
          "is_flexible": false,
          "item_date": "2025-05-02",
          "item_type": "activity",
          "notes": "Wear comfortable shoes",
          "start_time": "10:00",
          "title": "Visit Tokyo Tower",
          "updated_at": "2025-04-01T09:00:00Z"
        }
      },
      "ItineraryItemType": {
        "type": "string",
        "enum": [
          "activity",
          "accommodation",
          "transport",
          "meal"
        ],
        "title": "ItineraryItemType",
        "description": "Types of items that can be in an itinerary."
      },
      "ItineraryItemUpdateRequest": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title or name of the item"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the item"
          },
          "item_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Item Date",
            "description": "Date of the itinerary item"
          },
          "time_slot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimeSlot"
              },
              {
                "type": "null"
              }
            ],
            "description": "Time slot for the item, if applicable"
          },
          "location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Location"
              },
              {
                "type": "null"
              }
            ],
            "description": "Location of the item, if applicable"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost",
            "description": "Cost of the item in the trip's currency"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency code for the cost (e.g., 'USD')"
          },
          "booking_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Booking Reference",
            "description": "Booking reference or confirmation number"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Additional notes about the item"
          },
          "is_flexible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Flexible",
            "description": "Whether this item's time is flexible"
          },
          "flight_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Flight Details",
            "description": "Flight-specific details if type is TRANSPORT"
          },
          "accommodation_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation Details",
            "description": "Accommodation-specific details if type is ACCOMMODATION"
          },
          "activity_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Details",
            "description": "Activity-specific details if type is ACTIVITY"
          },
          "transportation_details": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transportation Details",
            "description": "Transportation-specific details if type is TRANSPORT"
          }
        },
        "type": "object",
        "title": "ItineraryItemUpdateRequest",
        "description": "Request model for updating an itinerary item."
      },
      "ItineraryOptimizeRequest": {
        "properties": {
          "itinerary_id": {
            "type": "string",
            "title": "Itinerary Id",
            "description": "ID of the itinerary to optimize"
          },
          "settings": {
            "$ref": "#/components/schemas/OptimizationSetting",
            "description": "Optimization settings"
          }
        },
        "type": "object",
        "required": [
          "itinerary_id",
          "settings"
        ],
        "title": "ItineraryOptimizeRequest",
        "description": "Request model for optimizing an itinerary."
      },
      "ItineraryOptimizeResponse": {
        "properties": {
          "original_itinerary": {
            "$ref": "#/components/schemas/ItineraryResponse",
            "description": "Original itinerary before optimization"
          },
          "optimized_itinerary": {
            "$ref": "#/components/schemas/ItineraryResponse",
            "description": "Optimized itinerary"
          },
          "changes": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Changes",
            "description": "List of changes made during optimization"
          },
          "optimization_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Optimization Score",
            "description": "Score representing the optimization improvement (0-1)"
          }
        },
        "type": "object",
        "required": [
          "original_itinerary",
          "optimized_itinerary",
          "optimization_score"
        ],
        "title": "ItineraryOptimizeResponse",
        "description": "Response model for optimized itinerary."
      },
      "ItineraryResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Itinerary identifier"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Itinerary title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Itinerary description"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Itinerary start date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date",
            "description": "Itinerary end date"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Current status of the itinerary"
          },
          "total_budget": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Budget",
            "description": "Total budget for the trip"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency code for budget"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Associated tags"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ItineraryItemResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "Itinerary items"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "start_date",
          "end_date",
          "status"
        ],
        "title": "ItineraryResponse",
        "description": "Response model for itinerary.",
        "example": {
          "created_at": "2025-04-01T09:00:00Z",
          "currency": "USD",
          "description": "5-day itinerary",
          "end_date": "2025-05-05",
          "id": "itinerary-123",
          "items": [
            {
              "end_time": "12:00",
              "id": "item-123",
              "item_date": "2025-05-02",
              "item_type": "activity",
              "start_time": "10:00",
              "title": "Visit Tokyo Tower"
            }
          ],
          "start_date": "2025-05-01",
          "status": "active",
          "tags": [
            "culture",
            "food"
          ],
          "title": "Tokyo Adventure",
          "total_budget": 4500.0,
          "updated_at": "2025-04-01T09:00:00Z"
        }
      },
      "ItinerarySearchRequest": {
        "properties": {
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query",
            "description": "Search query for finding itineraries"
          },
          "start_date_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date From",
            "description": "Filter for itineraries starting from this date"
          },
          "start_date_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date To",
            "description": "Filter for itineraries starting before this date"
          },
          "end_date_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date From",
            "description": "Filter for itineraries ending from this date"
          },
          "end_date_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date To",
            "description": "Filter for itineraries ending before this date"
          },
          "destinations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destinations",
            "description": "Filter by destination IDs included in the itinerary"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ItineraryStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by itinerary status"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Filter by tags associated with the itinerary"
          },
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page",
            "description": "Page number for pagination",
            "default": 1
          },
          "page_size": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Page Size",
            "description": "Number of results per page",
            "default": 10
          }
        },
        "type": "object",
        "title": "ItinerarySearchRequest",
        "description": "Request model for searching itineraries."
      },
      "ItinerarySearchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the request was successful"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Human-readable message"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ItineraryResponse"
            },
            "type": "array",
            "title": "Data",
            "description": "List of items"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationMeta",
            "description": "Pagination metadata"
          }
        },
        "type": "object",
        "required": [
          "success",
          "data",
          "pagination"
        ],
        "title": "ItinerarySearchResponse",
        "description": "Paginated itinerary search response following canonical pagination schema.",
        "example": {
          "data": [
            {
              "created_at": "2025-04-01T09:00:00Z",
              "currency": "USD",
              "description": "5-day itinerary",
              "end_date": "2025-05-05",
              "id": "itinerary-123",
              "items": [],
              "start_date": "2025-05-01",
              "status": "active",
              "tags": [
                "culture"
              ],
              "title": "Tokyo Adventure",
              "total_budget": 4500.0,
              "updated_at": "2025-04-01T09:00:00Z"
            }
          ],
          "pagination": {
            "has_next": false,
            "has_prev": false,
            "page": 1,
            "per_page": 25,
            "total_items": 1,
            "total_pages": 1
          },
          "success": true,
          "timestamp": "2025-04-01T09:00:00Z"
        }
      },
      "ItineraryShareSettings": {
        "type": "string",
        "enum": [
          "private",
          "public",
          "shared"
        ],
        "title": "ItineraryShareSettings",
        "description": "Sharing settings for an itinerary."
      },
      "ItineraryStatus": {
        "type": "string",
        "enum": [
          "draft",
          "active",
          "completed"
        ],
        "title": "ItineraryStatus",
        "description": "Status of an itinerary."
      },
      "ItineraryUpdateRequest": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of the itinerary"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the itinerary"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ItineraryStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Current status of the itinerary"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Start date of the itinerary"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "End date of the itinerary"
          },
          "destinations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destinations",
            "description": "List of destination IDs to include in this itinerary"
          },
          "total_budget": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Budget",
            "description": "Total budget for the trip"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "Currency code for budget amounts (e.g., 'USD')"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "List of tags to associate with this itinerary"
          },
          "share_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ItineraryShareSettings"
              },
              {
                "type": "null"
              }
            ],
            "description": "Sharing settings for the itinerary"
          }
        },
        "type": "object",
        "title": "ItineraryUpdateRequest",
        "description": "Request model for updating an existing itinerary.",
        "example": {
          "status": "active",
          "tags": [
            "culture",
            "nightlife"
          ],
          "title": "Updated Tokyo Adventure"
        }
      },
      "Location": {
        "properties": {
          "latitude": {
            "type": "number",
            "maximum": 90.0,
            "minimum": -90.0,
            "title": "Latitude",
            "description": "Latitude coordinate"
          },
          "longitude": {
            "type": "number",
            "maximum": 180.0,
            "minimum": -180.0,
            "title": "Longitude",
            "description": "Longitude coordinate"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the location"
          }
        },
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "title": "Location",
        "description": "Location information for itinerary items."
      },
      "MemorySearchResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/MemorySearchResult"
            },
            "type": "array",
            "title": "Results",
            "description": "Search results"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Original query string"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total results returned"
          }
        },
        "type": "object",
        "required": [
          "results",
          "query",
          "total"
        ],
        "title": "MemorySearchResponse",
        "description": "Search results wrapper for memory queries."
      },
      "MemorySearchResult": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Memory ID"
          },
          "memory": {
            "type": "string",
            "title": "Memory",
            "description": "Memory content"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Memory metadata"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Categories",
            "description": "Memory categories"
          },
          "similarity": {
            "type": "number",
            "title": "Similarity",
            "description": "Similarity score",
            "default": 0.0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          }
        },
        "type": "object",
        "required": [
          "id",
          "memory",
          "created_at",
          "user_id"
        ],
        "title": "MemorySearchResult",
        "description": "Memory search result with metadata."
      },
      "MessageRole": {
        "type": "string",
        "enum": [
          "user",
          "assistant",
          "system",
          "tool"
        ],
        "title": "MessageRole",
        "description": "Valid message roles."
      },
      "OptimizationSetting": {
        "type": "string",
        "enum": [
          "time",
          "cost",
          "convenience"
        ],
        "title": "OptimizationSetting",
        "description": "Optimization settings for itinerary planning."
      },
      "PaginationMeta": {
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Page",
            "description": "Current page number"
          },
          "per_page": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Per Page",
            "description": "Items per page"
          },
          "total_items": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Items",
            "description": "Total number of items"
          },
          "total_pages": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Total Pages",
            "description": "Total number of pages"
          },
          "has_next": {
            "type": "boolean",
            "title": "Has Next",
            "description": "Whether there are more pages"
          },
          "has_prev": {
            "type": "boolean",
            "title": "Has Prev",
            "description": "Whether there are previous pages"
          }
        },
        "type": "object",
        "required": [
          "page",
          "per_page",
          "total_items",
          "total_pages",
          "has_next",
          "has_prev"
        ],
        "title": "PaginationMeta",
        "description": "Pagination metadata."
      },
      "PassengerType": {
        "type": "string",
        "enum": [
          "adult",
          "child",
          "infant"
        ],
        "title": "PassengerType",
        "description": "Types of passengers for flight bookings."
      },
      "PointOfInterest": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "POI ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "POI name"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "POI category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "POI description"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "POI address"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude",
            "description": "Latitude coordinate"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude",
            "description": "Longitude coordinate"
          },
          "rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating",
            "description": "POI rating"
          },
          "review_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Count",
            "description": "Number of reviews"
          },
          "price_level": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Level",
            "description": "Price level (1-4)"
          },
          "opening_hours": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Opening Hours",
            "description": "Opening hours by day"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/DestinationImage"
            },
            "type": "array",
            "title": "Images",
            "description": "POI images"
          },
          "website": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website",
            "description": "POI website URL"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "POI phone number"
          },
          "popular_times": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Popular Times",
            "description": "Popular visiting times"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "category"
        ],
        "title": "PointOfInterest",
        "description": "Point of interest information."
      },
      "Price-Input": {
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string",
                "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$"
              }
            ],
            "title": "Amount",
            "description": "Price amount"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyCode",
            "description": "Currency code"
          },
          "formatted": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Formatted",
            "description": "Formatted price string"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "currency"
        ],
        "title": "Price",
        "description": "Price with currency and optional breakdown."
      },
      "Price-Output": {
        "properties": {
          "amount": {
            "type": "string",
            "pattern": "^(?!^[-+.]*$)[+-]?0*\\d*\\.?\\d*$",
            "title": "Amount",
            "description": "Price amount"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyCode",
            "description": "Currency code"
          },
          "formatted": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Formatted",
            "description": "Formatted price string"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "currency"
        ],
        "title": "Price",
        "description": "Price with currency and optional breakdown."
      },
      "PriceRange": {
        "properties": {
          "min": {
            "type": "number",
            "minimum": 0.0,
            "title": "Min",
            "description": "Minimum price"
          },
          "max": {
            "type": "number",
            "minimum": 0.0,
            "title": "Max",
            "description": "Maximum price"
          }
        },
        "type": "object",
        "required": [
          "min",
          "max"
        ],
        "title": "PriceRange",
        "description": "Price range filter."
      },
      "PropertyType": {
        "type": "string",
        "enum": [
          "hotel",
          "apartment",
          "house",
          "villa",
          "resort",
          "hostel",
          "bed_and_breakfast",
          "guest_house",
          "other"
        ],
        "title": "PropertyType",
        "description": "Property type enumeration."
      },
      "RateLimitInfoResponse": {
        "properties": {
          "key_id": {
            "type": "string",
            "title": "Key Id",
            "description": "API key ID"
          },
          "service": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service",
            "description": "Service name"
          },
          "current_usage": {
            "type": "integer",
            "title": "Current Usage",
            "description": "Current usage count"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Rate limit threshold"
          },
          "remaining": {
            "type": "integer",
            "title": "Remaining",
            "description": "Remaining quota"
          },
          "window_minutes": {
            "type": "integer",
            "title": "Window Minutes",
            "description": "Rate limit window in minutes"
          },
          "reset_at": {
            "type": "string",
            "format": "date-time",
            "title": "Reset At",
            "description": "Rate limit reset time"
          },
          "percentage_used": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Percentage Used",
            "description": "Percentage of quota used"
          },
          "is_approaching_limit": {
            "type": "boolean",
            "title": "Is Approaching Limit",
            "description": "Whether approaching the limit"
          }
        },
        "type": "object",
        "required": [
          "key_id",
          "current_usage",
          "limit",
          "remaining",
          "window_minutes",
          "reset_at",
          "percentage_used",
          "is_approaching_limit"
        ],
        "title": "RateLimitInfoResponse",
        "description": "Rate limit information response."
      },
      "ReadinessCheck": {
        "properties": {
          "ready": {
            "type": "boolean",
            "title": "Ready"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "checks": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Checks"
          },
          "details": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "ready",
          "checks"
        ],
        "title": "ReadinessCheck",
        "description": "Readiness check result.\n\nAttributes:\n    ready: Whether the application is ready to serve traffic.\n    timestamp: Current timestamp.\n    checks: Map of dependency name to readiness boolean.\n    details: Optional details per dependency."
      },
      "RegisterRequest": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "title": "Username",
            "description": "Username (3-50 characters, alphanumeric, underscore, hyphen)"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "Valid email address"
          },
          "password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "Password",
            "description": "Password (8-128 characters with strength requirements)"
          },
          "password_confirm": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "Password Confirm",
            "description": "Password confirmation (must match password)"
          },
          "full_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Full Name",
            "description": "Full name (1-100 characters)"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "password_confirm",
          "full_name"
        ],
        "title": "RegisterRequest",
        "description": "User registration request model."
      },
      "SafetyLevel": {
        "type": "string",
        "enum": [
          "very_safe",
          "safe",
          "moderate",
          "caution",
          "high_risk"
        ],
        "title": "SafetyLevel",
        "description": "Safety level enumeration."
      },
      "SaveActivityRequest": {
        "properties": {
          "activity_id": {
            "type": "string",
            "title": "Activity Id"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "activity_id"
        ],
        "title": "SaveActivityRequest",
        "description": "Request body to save an activity to a trip."
      },
      "SavedAccommodationRequest": {
        "properties": {
          "listing_id": {
            "type": "string",
            "title": "Listing Id",
            "description": "Accommodation listing ID"
          },
          "trip_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trip Id",
            "description": "Trip ID to save the accommodation for"
          },
          "check_in": {
            "type": "string",
            "format": "date",
            "title": "Check In",
            "description": "Check-in date"
          },
          "check_out": {
            "type": "string",
            "format": "date",
            "title": "Check Out",
            "description": "Check-out date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Notes about this accommodation"
          }
        },
        "type": "object",
        "required": [
          "listing_id",
          "trip_id",
          "check_in",
          "check_out"
        ],
        "title": "SavedAccommodationRequest",
        "description": "Request model for saving an accommodation listing.",
        "example": {
          "check_in": "2025-07-12",
          "check_out": "2025-07-15",
          "listing_id": "listing-123",
          "notes": "Great location for conference",
          "trip_id": "8c808086-7a9f-4a4a-8212-1c0857f0fa4f"
        }
      },
      "SavedAccommodationResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Saved accommodation ID"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "trip_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trip Id",
            "description": "Trip ID"
          },
          "listing": {
            "$ref": "#/components/schemas/AccommodationListing",
            "description": "Accommodation listing details"
          },
          "check_in": {
            "type": "string",
            "format": "date",
            "title": "Check In",
            "description": "Check-in date"
          },
          "check_out": {
            "type": "string",
            "format": "date",
            "title": "Check Out",
            "description": "Check-out date"
          },
          "saved_at": {
            "type": "string",
            "format": "date",
            "title": "Saved At",
            "description": "Date when the accommodation was saved"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Notes about this accommodation"
          },
          "status": {
            "$ref": "#/components/schemas/tripsage_core__services__business__accommodation_service__BookingStatus",
            "description": "Booking status",
            "default": "saved"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "trip_id",
          "listing",
          "check_in",
          "check_out",
          "saved_at"
        ],
        "title": "SavedAccommodationResponse",
        "description": "Response model for a saved accommodation listing.",
        "example": {
          "check_in": "2025-07-12",
          "check_out": "2025-07-15",
          "id": "7b991b2c-6ce5-49e1-9960-1ef5a06979cd",
          "listing": {
            "currency": "USD",
            "id": "listing-123",
            "location": {
              "address": "123 Main St",
              "city": "New York",
              "country": "USA"
            },
            "max_guests": 2,
            "name": "Central City Loft",
            "price_per_night": 245.0,
            "property_type": "apartment"
          },
          "notes": "Request late checkout",
          "saved_at": "2025-05-01",
          "status": "saved",
          "trip_id": "8c808086-7a9f-4a4a-8212-1c0857f0fa4f",
          "user_id": "user-42"
        }
      },
      "SavedActivityResponse": {
        "properties": {
          "activity_id": {
            "type": "string",
            "title": "Activity Id",
            "description": "Activity ID"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip ID"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID who saved the activity"
          },
          "saved_at": {
            "type": "string",
            "title": "Saved At",
            "description": "When activity was saved (ISO format)"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "User notes about the activity"
          },
          "activity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "Full activity details"
          }
        },
        "type": "object",
        "required": [
          "activity_id",
          "user_id",
          "saved_at"
        ],
        "title": "SavedActivityResponse",
        "description": "Saved activity entry in a user's trip context."
      },
      "SavedDestination": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Saved destination ID"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip ID"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination-Output",
            "description": "Destination details"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "User notes"
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "Priority"
          },
          "planned_visit_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Visit Date",
            "description": "Planned visit date"
          },
          "duration_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Days",
            "description": "Planned duration"
          },
          "saved_at": {
            "type": "string",
            "format": "date-time",
            "title": "Saved At",
            "description": "When destination was saved"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "destination",
          "priority",
          "saved_at"
        ],
        "title": "SavedDestination",
        "description": "Saved destination information."
      },
      "SavedDestinationRequest": {
        "properties": {
          "destination_id": {
            "type": "string",
            "title": "Destination Id",
            "description": "Destination ID to save"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip ID"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "User notes about the destination"
          },
          "priority": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Priority",
            "description": "Priority (1=highest, 5=lowest)",
            "default": 3
          },
          "planned_visit_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Visit Date",
            "description": "Planned visit date"
          },
          "duration_days": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Days",
            "description": "Planned duration in days"
          }
        },
        "type": "object",
        "required": [
          "destination_id"
        ],
        "title": "SavedDestinationRequest",
        "description": "Request model for saving a destination."
      },
      "SearchFacet": {
        "properties": {
          "field": {
            "type": "string",
            "title": "Field"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "values": {
            "items": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "type": "object"
            },
            "type": "array",
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "field",
          "label",
          "type",
          "values"
        ],
        "title": "SearchFacet",
        "description": "Facet item used for filtering groups."
      },
      "SearchFilters": {
        "properties": {
          "price_min": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Min"
          },
          "price_max": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Max"
          },
          "rating_min": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating Min"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 90.0,
                "minimum": -90.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 180.0,
                "minimum": -180.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "radius_km": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 100.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Radius Km"
          },
          "custom_filters": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Filters"
          }
        },
        "type": "object",
        "title": "SearchFilters",
        "description": "Common filters for unified search."
      },
      "SearchMemoryRequest": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Search query"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum results to return",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchMemoryRequest",
        "description": "Search query for user memories."
      },
      "SearchMetadata": {
        "properties": {
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "default": 0
          },
          "returned_results": {
            "type": "integer",
            "title": "Returned Results",
            "default": 0
          },
          "search_time_ms": {
            "type": "integer",
            "title": "Search Time Ms",
            "default": 0
          },
          "cached_results": {
            "type": "integer",
            "title": "Cached Results",
            "default": 0
          },
          "search_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "personalized": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personalized"
          },
          "providers_queried": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Providers Queried"
          },
          "provider_errors": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Errors"
          }
        },
        "type": "object",
        "title": "SearchMetadata",
        "description": "Metadata wrapper for a search operation."
      },
      "SearchResultItem": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "rating": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating"
          },
          "review_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Count"
          },
          "relevance_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Relevance Score"
          },
          "match_reasons": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Match Reasons"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "quick_actions": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quick Actions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "title",
          "description"
        ],
        "title": "SearchResultItem",
        "description": "Generic search result item across types."
      },
      "ServiceHealthStatus": {
        "type": "string",
        "enum": [
          "healthy",
          "degraded",
          "unhealthy",
          "unknown"
        ],
        "title": "ServiceHealthStatus",
        "description": "Service health status values."
      },
      "ServiceStatusResponse": {
        "properties": {
          "service": {
            "type": "string",
            "title": "Service",
            "description": "Service name"
          },
          "status": {
            "$ref": "#/components/schemas/ServiceHealthStatus",
            "description": "Service health status"
          },
          "latency_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency Ms",
            "description": "Response latency in milliseconds"
          },
          "last_check": {
            "type": "string",
            "format": "date-time",
            "title": "Last Check"
          },
          "error_rate": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Error Rate",
            "description": "Error rate",
            "default": 0.0
          },
          "uptime_percentage": {
            "type": "number",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Uptime Percentage",
            "description": "Uptime percentage",
            "default": 100.0
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Status message"
          },
          "endpoint_health": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ServiceHealthStatus"
            },
            "type": "object",
            "title": "Endpoint Health"
          }
        },
        "type": "object",
        "required": [
          "service",
          "status"
        ],
        "title": "ServiceStatusResponse",
        "description": "Service status response."
      },
      "SessionCreateRequest": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Session title"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Session metadata"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "SessionCreateRequest",
        "description": "Request model for creating a new chat session."
      },
      "SystemHealth": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0.0"
          },
          "environment": {
            "type": "string",
            "title": "Environment"
          },
          "components": {
            "items": {
              "$ref": "#/components/schemas/tripsage__api__schemas__health__ComponentHealth"
            },
            "type": "array",
            "title": "Components"
          }
        },
        "type": "object",
        "required": [
          "status",
          "environment",
          "components"
        ],
        "title": "SystemHealth",
        "description": "Overall system health status.\n\nAttributes:\n    status: Overall health status string.\n    timestamp: Current timestamp.\n    version: API version string.\n    environment: Deployment environment.\n    components: List of component health statuses."
      },
      "SystemOverviewResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SystemStatus",
            "description": "Overall system status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "uptime_seconds": {
            "type": "integer",
            "title": "Uptime Seconds",
            "description": "System uptime in seconds"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "API version",
            "default": "1.0.0"
          },
          "environment": {
            "type": "string",
            "title": "Environment",
            "description": "Deployment environment"
          },
          "total_requests_24h": {
            "type": "integer",
            "title": "Total Requests 24H",
            "description": "Total requests in last 24 hours"
          },
          "total_errors_24h": {
            "type": "integer",
            "title": "Total Errors 24H",
            "description": "Total errors in last 24 hours"
          },
          "success_rate_24h": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Success Rate 24H",
            "description": "Success rate in last 24 hours"
          },
          "avg_latency_ms": {
            "type": "number",
            "title": "Avg Latency Ms",
            "description": "Average response latency",
            "default": 0.0
          },
          "active_users_24h": {
            "type": "integer",
            "title": "Active Users 24H",
            "description": "Active users in last 24 hours"
          },
          "active_api_keys": {
            "type": "integer",
            "title": "Active Api Keys",
            "description": "Active API keys"
          },
          "components": {
            "items": {
              "$ref": "#/components/schemas/tripsage__api__schemas__dashboard__ComponentHealth"
            },
            "type": "array",
            "title": "Components",
            "description": "Component health status"
          }
        },
        "type": "object",
        "required": [
          "status",
          "uptime_seconds",
          "environment",
          "total_requests_24h",
          "total_errors_24h",
          "success_rate_24h",
          "active_users_24h",
          "active_api_keys"
        ],
        "title": "SystemOverviewResponse",
        "description": "System overview dashboard response."
      },
      "SystemStatus": {
        "type": "string",
        "enum": [
          "healthy",
          "degraded",
          "unhealthy",
          "maintenance"
        ],
        "title": "SystemStatus",
        "description": "Overall system status values."
      },
      "TimeSlot": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time",
            "description": "Start time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time",
            "description": "End time"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "TimeSlot",
        "description": "Time slot for itinerary items."
      },
      "ToolCall": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique identifier for the tool call"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the tool"
          },
          "arguments": {
            "additionalProperties": true,
            "type": "object",
            "title": "Arguments",
            "description": "Tool arguments"
          },
          "result": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result",
            "description": "Tool result"
          },
          "status": {
            "$ref": "#/components/schemas/ToolCallStatus",
            "description": "Tool call status",
            "default": "pending"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if failed"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "ToolCall",
        "description": "Common model for tool calls in chat messages."
      },
      "ToolCallStatus": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "completed",
          "failed"
        ],
        "title": "ToolCallStatus",
        "description": "Valid tool call statuses."
      },
      "TransportationPreferences": {
        "properties": {
          "flight_preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Flight Preferences",
            "description": "Flight preferences",
            "example": {
              "max_stops": 1,
              "preferred_airlines": [],
              "seat_class": "economy",
              "time_window": "flexible"
            }
          },
          "local_transportation": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local Transportation",
            "description": "Preferred local transportation methods",
            "example": [
              "public_transport",
              "walking"
            ]
          },
          "max_travel_time_hours": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Travel Time Hours",
            "description": "Maximum acceptable travel time in hours"
          }
        },
        "type": "object",
        "title": "TransportationPreferences",
        "description": "Transportation preferences for trips."
      },
      "TravelAdvisory": {
        "properties": {
          "safety_level": {
            "$ref": "#/components/schemas/SafetyLevel",
            "description": "Overall safety level"
          },
          "advisory_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Advisory Text",
            "description": "Advisory text"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated",
            "description": "Last updated timestamp"
          },
          "restrictions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Restrictions",
            "description": "Current travel restrictions"
          },
          "health_requirements": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Health Requirements",
            "description": "Health requirements"
          },
          "embassy_info": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embassy Info",
            "description": "Embassy contact information"
          }
        },
        "type": "object",
        "required": [
          "safety_level",
          "last_updated"
        ],
        "title": "TravelAdvisory",
        "description": "Travel advisory information."
      },
      "TrendDataPoint": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Data point timestamp"
          },
          "value": {
            "type": "number",
            "title": "Value",
            "description": "Metric value"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Additional context"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "value"
        ],
        "title": "TrendDataPoint",
        "description": "Single data point in a trend series."
      },
      "TripCollaboratorResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id",
            "description": "Collaborator user ID"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Collaborator email"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Collaborator name"
          },
          "permission_level": {
            "type": "string",
            "title": "Permission Level",
            "description": "Permission level (view, edit, admin)"
          },
          "added_by": {
            "type": "string",
            "format": "uuid",
            "title": "Added By",
            "description": "User ID who added this collaborator"
          },
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At",
            "description": "Timestamp when access was granted"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether the collaborator is active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "email",
          "permission_level",
          "added_by",
          "added_at"
        ],
        "title": "TripCollaboratorResponse",
        "description": "Response model for trip collaborator information.",
        "example": {
          "added_at": "2025-01-18T09:45:00Z",
          "added_by": "123e4567-e89b-12d3-a456-426614174001",
          "email": "collaborator@example.com",
          "is_active": true,
          "name": "Alex Planner",
          "permission_level": "edit",
          "user_id": "123e4567-e89b-12d3-a456-426614174000"
        }
      },
      "TripCollaboratorUpdateRequest": {
        "properties": {
          "permission_level": {
            "type": "string",
            "pattern": "^(view|edit|admin)$",
            "title": "Permission Level",
            "description": "New permission level (view, edit, admin)"
          }
        },
        "type": "object",
        "required": [
          "permission_level"
        ],
        "title": "TripCollaboratorUpdateRequest",
        "description": "Request model for updating collaborator permissions."
      },
      "TripCollaboratorsListResponse": {
        "properties": {
          "collaborators": {
            "items": {
              "$ref": "#/components/schemas/TripCollaboratorResponse"
            },
            "type": "array",
            "title": "Collaborators",
            "description": "List of trip collaborators"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of collaborators"
          },
          "owner_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner Id",
            "description": "Trip owner user ID"
          }
        },
        "type": "object",
        "required": [
          "collaborators",
          "total",
          "owner_id"
        ],
        "title": "TripCollaboratorsListResponse",
        "description": "Response model for listing trip collaborators.",
        "example": {
          "collaborators": [
            {
              "added_at": "2025-01-18T09:45:00Z",
              "added_by": "123e4567-e89b-12d3-a456-426614174001",
              "email": "collaborator@example.com",
              "permission_level": "view",
              "user_id": "123e4567-e89b-12d3-a456-426614174000"
            }
          ],
          "owner_id": "123e4567-e89b-12d3-a456-426614174001",
          "total": 1
        }
      },
      "TripDestination": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Destination name"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "coordinates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Coordinates"
              },
              {
                "type": "null"
              }
            ],
            "description": "Geographic coordinates"
          },
          "arrival_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Arrival Date",
            "description": "Date of arrival"
          },
          "departure_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Departure Date",
            "description": "Date of departure"
          },
          "duration_days": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Days",
            "description": "Duration in days"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "TripDestination",
        "description": "Shared model for a trip destination with enhanced geographic support."
      },
      "TripListItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Trip ID"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Trip title"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Trip start date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date",
            "description": "Trip end date"
          },
          "duration_days": {
            "type": "integer",
            "title": "Duration Days",
            "description": "Trip duration in days"
          },
          "destinations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Destinations",
            "description": "Trip destination names"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Trip status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "start_date",
          "end_date",
          "duration_days",
          "destinations",
          "status",
          "created_at"
        ],
        "title": "TripListItem",
        "description": "Response model for trip list items.",
        "example": {
          "created_at": "2025-01-15T14:30:00Z",
          "destinations": [
            "Paris",
            "Rome"
          ],
          "duration_days": 10,
          "end_date": "2025-06-10",
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "start_date": "2025-06-01",
          "status": "planning",
          "title": "Summer Vacation"
        }
      },
      "TripListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/TripListItem"
            },
            "type": "array",
            "title": "Items",
            "description": "List of trips"
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of trips"
          },
          "skip": {
            "type": "integer",
            "title": "Skip",
            "description": "Number of trips skipped"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "description": "Maximum number of trips returned"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "skip",
          "limit"
        ],
        "title": "TripListResponse",
        "description": "Response model for a list of trips.",
        "example": {
          "items": [
            {
              "created_at": "2025-01-15T14:30:00Z",
              "destinations": [
                "Paris",
                "Rome"
              ],
              "duration_days": 10,
              "end_date": "2025-06-10",
              "id": "123e4567-e89b-12d3-a456-426614174000",
              "start_date": "2025-06-01",
              "status": "planning",
              "title": "Summer Vacation"
            }
          ],
          "limit": 10,
          "skip": 0,
          "total": 1
        }
      },
      "TripPreferences-Input": {
        "properties": {
          "budget": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Budget-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Trip budget"
          },
          "accommodation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccommodationPreferences-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Accommodation preferences"
          },
          "transportation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransportationPreferences"
              },
              {
                "type": "null"
              }
            ],
            "description": "Transportation preferences"
          },
          "activities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activities",
            "description": "Preferred activities",
            "example": [
              "sightseeing",
              "museums",
              "outdoor_activities"
            ]
          },
          "dietary_restrictions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dietary Restrictions",
            "description": "Dietary restrictions",
            "example": [
              "vegetarian",
              "gluten_free"
            ]
          },
          "accessibility_needs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accessibility Needs",
            "description": "Accessibility needs",
            "example": [
              "wheelchair_accessible",
              "elevator_access"
            ]
          },
          "group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Size",
            "description": "Number of travelers"
          },
          "trip_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Style",
            "description": "Trip style",
            "example": "relaxed"
          }
        },
        "type": "object",
        "title": "TripPreferences",
        "description": "Trip preferences using shared financial and accommodation models."
      },
      "TripPreferences-Output": {
        "properties": {
          "budget": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Budget-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Trip budget"
          },
          "accommodation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccommodationPreferences-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Accommodation preferences"
          },
          "transportation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransportationPreferences"
              },
              {
                "type": "null"
              }
            ],
            "description": "Transportation preferences"
          },
          "activities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activities",
            "description": "Preferred activities",
            "example": [
              "sightseeing",
              "museums",
              "outdoor_activities"
            ]
          },
          "dietary_restrictions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dietary Restrictions",
            "description": "Dietary restrictions",
            "example": [
              "vegetarian",
              "gluten_free"
            ]
          },
          "accessibility_needs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accessibility Needs",
            "description": "Accessibility needs",
            "example": [
              "wheelchair_accessible",
              "elevator_access"
            ]
          },
          "group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Size",
            "description": "Number of travelers"
          },
          "trip_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Style",
            "description": "Trip style",
            "example": "relaxed"
          }
        },
        "type": "object",
        "title": "TripPreferences",
        "description": "Trip preferences using shared financial and accommodation models."
      },
      "TripPreferencesRequest": {
        "properties": {
          "budget": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Budget-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Trip budget"
          },
          "accommodation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccommodationPreferences-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Accommodation preferences"
          },
          "transportation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransportationPreferences"
              },
              {
                "type": "null"
              }
            ],
            "description": "Transportation preferences"
          },
          "activities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activities",
            "description": "Preferred activities",
            "example": [
              "sightseeing",
              "museums",
              "outdoor_activities"
            ]
          },
          "dietary_restrictions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dietary Restrictions",
            "description": "Dietary restrictions",
            "example": [
              "vegetarian",
              "gluten_free"
            ]
          },
          "accessibility_needs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accessibility Needs",
            "description": "Accessibility needs",
            "example": [
              "wheelchair_accessible",
              "elevator_access"
            ]
          },
          "group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Size",
            "description": "Number of travelers"
          },
          "trip_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Style",
            "description": "Trip style",
            "example": "relaxed"
          }
        },
        "type": "object",
        "title": "TripPreferencesRequest",
        "description": "Request model for updating trip preferences."
      },
      "TripResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Trip ID"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Trip title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Trip description"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date",
            "description": "Trip start date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date",
            "description": "Trip end date"
          },
          "duration_days": {
            "type": "integer",
            "title": "Duration Days",
            "description": "Trip duration in days"
          },
          "destinations": {
            "items": {
              "$ref": "#/components/schemas/TripDestination"
            },
            "type": "array",
            "title": "Destinations",
            "description": "Trip destinations"
          },
          "preferences": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TripPreferences-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Trip preferences"
          },
          "itinerary_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Itinerary Id",
            "description": "Associated itinerary ID"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Trip status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "title",
          "start_date",
          "end_date",
          "duration_days",
          "destinations",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "TripResponse",
        "description": "Response model for trip details.",
        "example": {
          "created_at": "2025-01-15T14:30:00Z",
          "description": "A two-week tour of Western Europe",
          "destinations": [
            {
              "arrival_date": "2025-06-01",
              "city": "Paris",
              "country": "France",
              "departure_date": "2025-06-05",
              "duration_days": 4,
              "name": "Paris"
            }
          ],
          "duration_days": 14,
          "end_date": "2025-06-15",
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "itinerary_id": "123e4567-e89b-12d3-a456-426614174001",
          "preferences": {},
          "start_date": "2025-06-01",
          "status": "planning",
          "title": "Summer Vacation in Europe",
          "updated_at": "2025-01-16T09:45:00Z",
          "user_id": "user123"
        }
      },
      "TripShareRequest": {
        "properties": {
          "user_emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 0,
            "title": "User Emails",
            "description": "Email addresses of users to share with"
          },
          "permission_level": {
            "type": "string",
            "pattern": "^(view|edit|admin)$",
            "title": "Permission Level",
            "description": "Permission level (view, edit, admin)",
            "default": "view"
          },
          "message": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message to send with invitation"
          }
        },
        "type": "object",
        "required": [
          "user_emails"
        ],
        "title": "TripShareRequest",
        "description": "Request model for sharing a trip with other users.",
        "example": {
          "message": "Check out these plans!",
          "permission_level": "edit",
          "user_emails": [
            "friend@example.com",
            "planner@example.org"
          ]
        }
      },
      "TripSuggestionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Suggestion ID"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Trip title"
          },
          "destination": {
            "type": "string",
            "title": "Destination",
            "description": "Primary destination"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Trip description"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "Cover image URL"
          },
          "estimated_price": {
            "type": "number",
            "title": "Estimated Price",
            "description": "Estimated total price"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Price currency"
          },
          "duration": {
            "type": "integer",
            "title": "Duration",
            "description": "Trip duration in days"
          },
          "rating": {
            "type": "number",
            "maximum": 5.0,
            "minimum": 0.0,
            "title": "Rating",
            "description": "Average rating"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Trip category (adventure, relaxation, culture, nature, city, beach)"
          },
          "best_time_to_visit": {
            "type": "string",
            "title": "Best Time To Visit",
            "description": "Recommended time period"
          },
          "highlights": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Highlights",
            "description": "Key highlights"
          },
          "difficulty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Difficulty",
            "description": "Trip difficulty (easy, moderate, challenging)"
          },
          "trending": {
            "type": "boolean",
            "title": "Trending",
            "description": "Whether this is a trending destination",
            "default": false
          },
          "seasonal": {
            "type": "boolean",
            "title": "Seasonal",
            "description": "Whether this is seasonal/time-sensitive",
            "default": false
          },
          "relevance_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Relevance Score",
            "description": "Personalization relevance score"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional metadata"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "destination",
          "description",
          "estimated_price",
          "currency",
          "duration",
          "rating",
          "category",
          "best_time_to_visit",
          "highlights"
        ],
        "title": "TripSuggestionResponse",
        "description": "Response model for trip suggestions.",
        "example": {
          "best_time_to_visit": "March - May",
          "category": "culture",
          "currency": "USD",
          "description": "Experience cherry blossom season in Japan's vibrant capital city.",
          "destination": "Tokyo, Japan",
          "difficulty": "moderate",
          "duration": 7,
          "estimated_price": 2800,
          "highlights": [
            "Cherry Blossoms",
            "Temples",
            "Street Food",
            "Modern Culture"
          ],
          "id": "suggestion-1",
          "image_url": "https://example.com/tokyo-cherry-blossom.jpg",
          "metadata": {
            "language": "Japanese",
            "personalization_reasons": [
              "Based on your interest in cultural experiences",
              "Previous trips to Asia"
            ],
            "visa_required": false,
            "weather": "Mild spring weather"
          },
          "rating": 4.8,
          "relevance_score": 0.95,
          "seasonal": true,
          "title": "Tokyo Cherry Blossom Adventure",
          "trending": true
        }
      },
      "TripSummaryResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id",
            "description": "Trip ID"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Trip title"
          },
          "date_range": {
            "type": "string",
            "title": "Date Range",
            "description": "Trip date range"
          },
          "duration_days": {
            "type": "integer",
            "title": "Duration Days",
            "description": "Trip duration in days"
          },
          "destinations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Destinations",
            "description": "Trip destination names"
          },
          "accommodation_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accommodation Summary",
            "description": "Accommodation summary"
          },
          "transportation_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transportation Summary",
            "description": "Transportation summary"
          },
          "budget_summary": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budget Summary",
            "description": "Budget summary"
          },
          "has_itinerary": {
            "type": "boolean",
            "title": "Has Itinerary",
            "description": "Whether trip has an itinerary"
          },
          "completion_percentage": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Completion Percentage",
            "description": "Trip planning completion percentage"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "date_range",
          "duration_days",
          "destinations",
          "has_itinerary",
          "completion_percentage"
        ],
        "title": "TripSummaryResponse",
        "description": "Response model for trip summary.",
        "example": {
          "accommodation_summary": "4-star hotels in city centers",
          "budget_summary": {},
          "completion_percentage": 60,
          "date_range": "Jun 1-15, 2025",
          "destinations": [
            "Paris",
            "Rome",
            "Barcelona"
          ],
          "duration_days": 14,
          "has_itinerary": true,
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "title": "Summer Vacation in Europe",
          "transportation_summary": "Economy flights with 1 connection, local transit"
        }
      },
      "UnifiedSearchAggregateResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/SearchResultItem"
            },
            "type": "array",
            "title": "Results"
          },
          "facets": {
            "items": {
              "$ref": "#/components/schemas/SearchFacet"
            },
            "type": "array",
            "title": "Facets"
          },
          "metadata": {
            "$ref": "#/components/schemas/SearchMetadata"
          },
          "results_by_type": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/SearchResultItem"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results By Type"
          },
          "did_you_mean": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Did You Mean"
          },
          "related_searches": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Searches"
          },
          "errors": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "metadata"
        ],
        "title": "UnifiedSearchAggregateResponse",
        "description": "Aggregate response for unified search."
      },
      "UnifiedSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 500,
            "minLength": 1,
            "title": "Query"
          },
          "types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Types"
          },
          "destination": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destination"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "origin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin"
          },
          "adults": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 20.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Adults",
            "default": 1
          },
          "children": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 20.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Children",
            "default": 0
          },
          "infants": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Infants",
            "default": 0
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SearchFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "sort_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort By"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(asc|desc)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "default": "desc"
          },
          "user_preferences": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Preferences"
          },
          "resource_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Types"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "guests": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guests"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "UnifiedSearchRequest",
        "description": "Request for cross-resource unified search."
      },
      "UpdatePreferencesRequest": {
        "properties": {
          "preferences": {
            "additionalProperties": true,
            "type": "object",
            "title": "Preferences",
            "description": "User preferences to update"
          }
        },
        "type": "object",
        "required": [
          "preferences"
        ],
        "title": "UpdatePreferencesRequest",
        "description": "Partial update of user preferences."
      },
      "UpdateTripRequest": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Trip title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Trip description"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Trip start date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "Trip end date"
          },
          "destinations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TripDestination"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destinations",
            "description": "Trip destinations"
          }
        },
        "type": "object",
        "title": "UpdateTripRequest",
        "description": "Request model for updating a trip.",
        "example": {
          "description": "Added day trips",
          "destinations": [
            {
              "city": "Florence",
              "country": "Italy",
              "name": "Florence"
            }
          ],
          "end_date": "2025-06-12",
          "start_date": "2025-06-02",
          "title": "Updated European Highlights"
        }
      },
      "UsageMetricsResponse": {
        "properties": {
          "period_start": {
            "type": "string",
            "format": "date-time",
            "title": "Period Start",
            "description": "Metrics period start time"
          },
          "period_end": {
            "type": "string",
            "format": "date-time",
            "title": "Period End",
            "description": "Metrics period end time"
          },
          "total_requests": {
            "type": "integer",
            "title": "Total Requests",
            "description": "Total number of requests"
          },
          "total_errors": {
            "type": "integer",
            "title": "Total Errors",
            "description": "Total number of errors"
          },
          "success_rate": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Success Rate",
            "description": "Success rate"
          },
          "avg_latency_ms": {
            "type": "number",
            "title": "Avg Latency Ms",
            "description": "Average response latency"
          },
          "p50_latency_ms": {
            "type": "number",
            "title": "P50 Latency Ms",
            "description": "50th percentile latency",
            "default": 0.0
          },
          "p95_latency_ms": {
            "type": "number",
            "title": "P95 Latency Ms",
            "description": "95th percentile latency",
            "default": 0.0
          },
          "p99_latency_ms": {
            "type": "number",
            "title": "P99 Latency Ms",
            "description": "99th percentile latency",
            "default": 0.0
          },
          "unique_users": {
            "type": "integer",
            "title": "Unique Users",
            "description": "Number of unique users"
          },
          "unique_endpoints": {
            "type": "integer",
            "title": "Unique Endpoints",
            "description": "Number of unique endpoints accessed"
          },
          "top_endpoints": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Endpoints",
            "description": "Top accessed endpoints"
          },
          "error_breakdown": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Error Breakdown",
            "description": "Error count by type"
          },
          "usage_by_service": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Usage By Service",
            "description": "Request count by service"
          }
        },
        "type": "object",
        "required": [
          "period_start",
          "period_end",
          "total_requests",
          "total_errors",
          "success_rate",
          "avg_latency_ms",
          "unique_users",
          "unique_endpoints"
        ],
        "title": "UsageMetricsResponse",
        "description": "Usage metrics response."
      },
      "UserActivityResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "user_type": {
            "type": "string",
            "title": "User Type",
            "description": "User type (user, agent, admin)"
          },
          "request_count": {
            "type": "integer",
            "title": "Request Count",
            "description": "Total request count"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count",
            "description": "Total error count"
          },
          "success_rate": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Success Rate",
            "description": "Success rate"
          },
          "last_activity": {
            "type": "string",
            "format": "date-time",
            "title": "Last Activity",
            "description": "Last activity timestamp"
          },
          "services_used": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Services Used",
            "description": "Services accessed"
          },
          "top_endpoints": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Top Endpoints",
            "description": "Most used endpoints"
          },
          "avg_latency_ms": {
            "type": "number",
            "title": "Avg Latency Ms",
            "description": "Average response latency",
            "default": 0.0
          },
          "activity_hours": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Activity Hours",
            "description": "Activity by hour"
          },
          "peak_activity_hour": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Peak Activity Hour",
            "description": "Hour with most activity"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "user_type",
          "request_count",
          "error_count",
          "success_rate",
          "last_activity"
        ],
        "title": "UserActivityResponse",
        "description": "User activity response."
      },
      "UserContextResponse": {
        "properties": {
          "preferences": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Preferences",
            "description": "User preferences"
          },
          "past_trips": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Past Trips",
            "description": "Past trip memories"
          },
          "saved_destinations": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Saved Destinations",
            "description": "Saved destinations"
          },
          "budget_patterns": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Budget Patterns",
            "description": "Budget patterns"
          },
          "travel_style": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Travel Style",
            "description": "Travel style memories"
          },
          "dietary_restrictions": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Dietary Restrictions",
            "description": "Dietary restrictions"
          },
          "accommodation_preferences": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Accommodation Preferences",
            "description": "Accommodation preferences"
          },
          "activity_preferences": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Activity Preferences",
            "description": "Activity preferences"
          },
          "insights": {
            "additionalProperties": true,
            "type": "object",
            "title": "Insights",
            "description": "Derived insights"
          },
          "summary": {
            "type": "string",
            "title": "Summary",
            "description": "Context summary",
            "default": ""
          }
        },
        "type": "object",
        "title": "UserContextResponse",
        "description": "Response model for user context."
      },
      "UserPreferencesRequest": {
        "properties": {
          "preferences": {
            "additionalProperties": true,
            "type": "object",
            "title": "Preferences",
            "description": "User preferences as a flexible JSON object"
          }
        },
        "type": "object",
        "required": [
          "preferences"
        ],
        "title": "UserPreferencesRequest",
        "description": "Request model for updating user preferences."
      },
      "UserPreferencesResponse": {
        "properties": {
          "preferences": {
            "additionalProperties": true,
            "type": "object",
            "title": "Preferences",
            "description": "Current user preferences"
          }
        },
        "type": "object",
        "required": [
          "preferences"
        ],
        "title": "UserPreferencesResponse",
        "description": "Response model for user preferences.",
        "example": {
          "preferences": {
            "currency": "USD",
            "language": "en",
            "notifications": {
              "email": true,
              "marketing": false,
              "push": false
            },
            "theme": "dark",
            "travel_preferences": {
              "accommodation_type": [
                "hotel",
                "resort"
              ],
              "budget_level": "moderate",
              "dietary_restrictions": [
                "vegetarian"
              ],
              "travel_style": [
                "adventure",
                "cultural"
              ]
            }
          }
        }
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "User ID"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email",
            "description": "User email address"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "description": "User's full name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Account creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "description": "Whether user account is active",
            "default": true
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "description": "Whether user account is verified",
            "default": false
          },
          "preferences": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preferences",
            "description": "User preferences"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "created_at",
          "updated_at"
        ],
        "title": "UserResponse",
        "description": "User response model."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "_ExportResponse": {
        "properties": {
          "format": {
            "type": "string",
            "title": "Format"
          },
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          },
          "export_token": {
            "type": "string",
            "title": "Export Token"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "estimated_completion": {
            "type": "string",
            "title": "Estimated Completion"
          },
          "download_url": {
            "type": "string",
            "title": "Download Url"
          },
          "expires_at": {
            "type": "string",
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "format",
          "trip_id",
          "export_token",
          "status",
          "estimated_completion",
          "download_url",
          "expires_at"
        ],
        "title": "_ExportResponse",
        "description": "Typed dictionary describing the export request acknowledgement payload."
      },
      "_ItineraryItem": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "start_time",
          "end_time",
          "location"
        ],
        "title": "_ItineraryItem",
        "description": "Typed dictionary describing an itinerary item in responses."
      },
      "_ItineraryResponse": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "trip_id": {
            "type": "string",
            "title": "Trip Id"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/_ItineraryItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total_items": {
            "type": "integer",
            "title": "Total Items"
          }
        },
        "type": "object",
        "required": [
          "id",
          "trip_id",
          "items",
          "total_items"
        ],
        "title": "_ItineraryResponse",
        "description": "Typed dictionary describing an itinerary response payload."
      },
      "tripsage__api__schemas__dashboard__ComponentHealth": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Component name"
          },
          "status": {
            "$ref": "#/components/schemas/ServiceHealthStatus",
            "description": "Component health status"
          },
          "latency_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency Ms",
            "description": "Response latency in milliseconds"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Status message"
          },
          "last_check": {
            "type": "string",
            "format": "date-time",
            "title": "Last Check"
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details",
            "description": "Additional details"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status"
        ],
        "title": "ComponentHealth",
        "description": "Health status of a system component."
      },
      "tripsage__api__schemas__health__ComponentHealth": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "latency_ms": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency Ms"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "details": {
            "additionalProperties": true,
            "type": "object",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "name",
          "status"
        ],
        "title": "ComponentHealth",
        "description": "Health status of a system component.\n\nAttributes:\n    name: Component name.\n    status: Health status string (healthy|degraded|unhealthy|unknown).\n    latency_ms: Optional response latency in milliseconds.\n    message: Optional status message.\n    details: Additional details map."
      },
      "tripsage_core__models__api__accommodation_models__AccommodationSearchRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User performing the accommodation search"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip identifier"
          },
          "location": {
            "type": "string",
            "title": "Location",
            "description": "Search location (city, address, etc.)"
          },
          "check_in": {
            "type": "string",
            "format": "date",
            "title": "Check In",
            "description": "Check-in date"
          },
          "check_out": {
            "type": "string",
            "format": "date",
            "title": "Check Out",
            "description": "Check-out date"
          },
          "guests": {
            "type": "integer",
            "maximum": 16.0,
            "minimum": 1.0,
            "title": "Guests",
            "description": "Number of guests",
            "default": 1
          },
          "adults": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Adults",
            "description": "Number of adults"
          },
          "children": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Children",
            "description": "Number of children"
          },
          "infants": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Infants",
            "description": "Number of infants"
          },
          "property_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PropertyType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Property Types",
            "description": "Preferred property types"
          },
          "min_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Price",
            "description": "Minimum price per night"
          },
          "max_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Price",
            "description": "Maximum price per night"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency code",
            "default": "USD"
          },
          "bedrooms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Bedrooms",
            "description": "Minimum number of bedrooms"
          },
          "beds": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 20.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Beds",
            "description": "Minimum number of beds"
          },
          "bathrooms": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Bathrooms",
            "description": "Minimum number of bathrooms"
          },
          "amenities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amenities",
            "description": "Required amenities"
          },
          "accessibility_features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accessibility Features",
            "description": "Required accessibility features"
          },
          "instant_book": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instant Book",
            "description": "Filter for instant bookable properties"
          },
          "free_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Free Cancellation",
            "description": "Filter for free cancellation"
          },
          "max_distance_km": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Distance Km",
            "description": "Maximum distance from center"
          },
          "min_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rating",
            "description": "Minimum property rating"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional client-provided context for the search"
          },
          "sort_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort By",
            "description": "Sort criteria",
            "default": "relevance"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "Sort order (asc/desc)",
            "default": "asc"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "location",
          "check_in",
          "check_out"
        ],
        "title": "AccommodationSearchRequest",
        "description": "Canonical API request model for accommodation search queries.",
        "example": {
          "amenities": [
            "wifi",
            "washer"
          ],
          "check_in": "2025-08-10",
          "check_out": "2025-08-14",
          "currency": "USD",
          "guests": 2,
          "location": "San Francisco",
          "max_price": 350.0,
          "property_types": [
            "apartment"
          ],
          "sort_by": "price",
          "sort_order": "asc",
          "trip_id": "8c808086-7a9f-4a4a-8212-1c0857f0fa4f",
          "user_id": "user-42"
        }
      },
      "tripsage_core__models__schemas_common__enums__BookingStatus": {
        "type": "string",
        "enum": [
          "viewed",
          "saved",
          "booked",
          "cancelled"
        ],
        "title": "BookingStatus",
        "description": "Status of a booking across all booking types (accommodations, flights, etc.)."
      },
      "tripsage_core__services__business__accommodation_service__AccommodationSearchRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User performing the accommodation search"
          },
          "trip_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trip Id",
            "description": "Associated trip identifier"
          },
          "location": {
            "type": "string",
            "title": "Location",
            "description": "Search location (city, address, etc.)"
          },
          "check_in": {
            "type": "string",
            "format": "date",
            "title": "Check In",
            "description": "Check-in date"
          },
          "check_out": {
            "type": "string",
            "format": "date",
            "title": "Check Out",
            "description": "Check-out date"
          },
          "guests": {
            "type": "integer",
            "maximum": 16.0,
            "minimum": 1.0,
            "title": "Guests",
            "description": "Number of guests",
            "default": 1
          },
          "adults": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Adults",
            "description": "Number of adults"
          },
          "children": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Children",
            "description": "Number of children"
          },
          "infants": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Infants",
            "description": "Number of infants"
          },
          "property_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PropertyType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Property Types",
            "description": "Preferred property types"
          },
          "min_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Price",
            "description": "Minimum price per night"
          },
          "max_price": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Price",
            "description": "Maximum price per night"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "Currency code",
            "default": "USD"
          },
          "bedrooms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Bedrooms",
            "description": "Minimum number of bedrooms"
          },
          "beds": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 20.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Beds",
            "description": "Minimum number of beds"
          },
          "bathrooms": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 10.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Bathrooms",
            "description": "Minimum number of bathrooms"
          },
          "amenities": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amenities",
            "description": "Required amenities"
          },
          "accessibility_features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accessibility Features",
            "description": "Required accessibility features"
          },
          "instant_book": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instant Book",
            "description": "Filter for instant bookable properties"
          },
          "free_cancellation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Free Cancellation",
            "description": "Filter for free cancellation"
          },
          "max_distance_km": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Distance Km",
            "description": "Maximum distance from center"
          },
          "min_rating": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 5.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Rating",
            "description": "Minimum property rating"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional client-provided context for the search"
          },
          "sort_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort By",
            "description": "Sort criteria",
            "default": "relevance"
          },
          "sort_order": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Order",
            "description": "Sort order (asc/desc)",
            "default": "asc"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "location",
          "check_in",
          "check_out"
        ],
        "title": "AccommodationSearchRequest",
        "description": "Request model for accommodation search."
      },
      "tripsage_core__services__business__accommodation_service__BookingStatus": {
        "type": "string",
        "enum": [
          "searched",
          "viewed",
          "saved",
          "inquired",
          "booked",
          "confirmed",
          "cancelled",
          "completed"
        ],
        "title": "BookingStatus",
        "description": "Accommodation booking status enumeration."
      }
    },
    "examples": {
      "auth_token": {
        "summary": "User authentication response",
        "description": "Response when user authentication is successful",
        "value": {
          "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
          "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
          "token_type": "bearer",
          "expires_at": "2023-07-27T12:34:56.789Z"
        }
      },
      "user_response": {
        "summary": "User information",
        "description": "Response with user information",
        "value": {
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "email": "user@example.com",
          "full_name": "John Doe",
          "created_at": "2023-07-27T12:34:56.789Z",
          "updated_at": "2023-07-27T12:34:56.789Z"
        }
      },
      "api_key_response": {
        "summary": "API key information",
        "description": "Response with API key information",
        "value": {
          "id": "123e4567-e89b-12d3-a456-426614174000",
          "name": "OpenAI API Key",
          "service": "openai",
          "description": "OpenAI API key for GPT-4",
          "created_at": "2023-07-27T12:34:56.789Z",
          "updated_at": "2023-07-27T12:34:56.789Z",
          "expires_at": "2024-07-27T12:34:56.789Z",
          "is_valid": true,
          "last_used": "2023-07-27T12:34:56.789Z"
        }
      },
      "api_key_validate_response": {
        "summary": "API key validation result",
        "description": "Response with API key validation result",
        "value": {
          "is_valid": true,
          "service": "openai",
          "message": "API key is valid"
        }
      },
      "error_response": {
        "summary": "Error response",
        "description": "Response when an error occurs",
        "value": {
          "status": "error",
          "message": "Error message",
          "error_code": "error_code",
          "details": {}
        }
      },
      "health_response": {
        "summary": "Health check response",
        "description": "Response when the health check is successful",
        "value": {
          "status": "ok",
          "application": "TripSage API",
          "version": "1.0.0",
          "environment": "development"
        }
      }
    },
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT authentication"
      },
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key authentication"
      }
    }
  },
  "tags": [
    {
      "name": "health",
      "description": "Health check and monitoring endpoints"
    },
    {
      "name": "auth",
      "description": "Authentication endpoints for user registration, login, and JWT token management. Primary authentication method for frontend consumers."
    },
    {
      "name": "api_keys",
      "description": "API key management endpoints (BYOK - Bring Your Own Key). Supports both system API keys for agents and user-provided external service keys."
    },
    {
      "name": "trips",
      "description": "Trip planning and management endpoints. Supports travel itinerary creation, optimization, and collaboration features."
    },
    {
      "name": "flights",
      "description": "Flight search and booking endpoints with multi-provider support. Includes price tracking, route optimization, and booking management."
    },
    {
      "name": "accommodations",
      "description": "Accommodation search and booking endpoints. Supports hotels and alternative lodging with MCP integration for enhanced search capabilities."
    },
    {
      "name": "destinations",
      "description": "Destination research endpoints with AI-powered insights. Provides destination information, weather, and recommendations."
    },
    {
      "name": "itineraries",
      "description": "Itinerary building and optimization endpoints. Intelligent trip scheduling with route optimization and activity coordination."
    },
    {
      "name": "chat",
      "description": "Chat and conversation endpoints for AI agent interaction. Supports session management and conversation history for both frontend and agent consumers."
    },
    {
      "name": "memory",
      "description": "Memory and context management endpoints. Provides persistent conversation memory, user preference learning, and contextual retrieval for AI agents."
    },
    {
      "name": "attachments",
      "description": "File upload and processing endpoints. Supports travel document analysis, image processing, and document extraction with AI-powered insights."
    },
    {
      "name": "websocket",
      "description": "Real-time communication endpoints via WebSocket. Enables live updates for chat, trip planning collaboration, and agent status monitoring."
    },
    {
      "name": "frontend",
      "description": "Endpoints optimized for frontend consumers with UI-friendly responses, pagination, and user experience enhancements."
    },
    {
      "name": "agents",
      "description": "Endpoints optimized for AI agent consumers with rich context data, tool integration metadata, and enhanced rate limits."
    }
  ]
}