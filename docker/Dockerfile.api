# syntax=docker/dockerfile:1
# =============================================================================
# TripSage API Development Container
# =============================================================================
# FastAPI backend service with modern architecture:
# - Mem0 memory system with pgvector backend
# - DragonflyDB for caching (25x faster than Redis)
# - Direct SDK integrations (Duffel, Google Maps, Crawl4AI, Playwright)
# - Supabase PostgreSQL with pgvector extension

FROM python:3.14-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install additional modern dependencies for current architecture
RUN pip install --no-cache-dir \
    mem0ai \
    crawl4ai \
    playwright \
    asyncpg \
    redis \
    supabase

# Install Playwright browsers
RUN playwright install chromium

# Copy application code
COPY tripsage/ ./tripsage/
COPY tripsage_core/ ./tripsage_core/
COPY supabase/migrations/ ./migrations/

# Create non-root user for security
RUN groupadd -r tripsage && useradd -r -g tripsage tripsage
RUN chown -R tripsage:tripsage /app
USER tripsage

# Health check for API availability
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose API port
EXPOSE 8080

# Set environment variables for modern architecture
ENV PYTHONPATH=/app
ENV DATABASE_TYPE=supabase
ENV CACHE_TYPE=dragonfly
ENV MEMORY_PROVIDER=mem0
ENV VECTOR_STORE=pgvector

# Start TripSage API server
CMD ["python", "-m", "tripsage.api.main"]